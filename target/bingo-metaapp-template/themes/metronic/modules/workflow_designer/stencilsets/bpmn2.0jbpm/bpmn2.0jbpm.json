{
	"title":"jBPM BPMN2 (Full)",
	"namespace":"http://b3mn.org/stencilset/bpmn2.0#",
	"description":"This is the jBPM BPMN 2.0 stencil set specification.",
	"description_zh_cn":"jBPM BPMN 2.0",
 	"propertyPackages": [
 		{
 			"name":"baseAttributes",
 			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"ID",
					"title_zh_cn":"ID",
					"value":"",
					"description":"The ID of the BPMN element.",
					"description_zh_cn":"BPMN元素的ID.",
					"readonly":false,
					"optional":true,
					"length":"40",
					"sortno": 1
				},
				{
					"id":"name",
					"type":"String",
					"title":"Name",
					"title_zh_cn":"名称",
					"value":"",
					"description":"The descriptive name of the BPMN element.",
					"description_zh_cn":"BPMN元素的显示名称.",
					"readonly":false,
					"optional":true,
					"length":"40",
					"refToView":"text_name"	,
					"sortno": 2
				},
				{
					"id":"documentation",
					"type":"Text",
					"title":"Documentation",
					"title_zh_cn":"描述",
					"value":"",
					"description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
					"description_zh_cn":"该属性用来注释BPMN节点元素, 包括描述和其他文档形式.",
					"readonly":false,
					"optional":true,
					"length":"500",
					"wrapLines":true,
					"sortno": 3
				}
 			]
 		},
 		{
            "name":"baseAttributesNoName",
            "properties": [
                {
                    "id":"documentation",
                    "type":"Text",
                    "title":"Documentation",
		    		"title_zh_cn":"描述",
                    "value":"",
                    "description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
                    "description_zh_cn":"该属性用来注释BPMN节点元素, 包括描述和其他文档形式.",
                    "readonly":false,
                    "optional":true,
                    "length":"500",
                    "wrapLines":true,
                    "grouping":"extra",
					"sortno":3
                },
                {
                    "id":"isselectable",
                    "type":"Choice",
                    "title":"Selectable",
                    "value":"true",
                    "default": "true",
                    "description":"This attribute is used to set selectable properties for every node and edges.",
                   "readonly":false,
                    "optional":true,
                    "hidden":true,
                    "items":[
                        {
                            "id":"c1",
                            "title":"true",
                            "value":"true"
                        },
                        {
                            "id":"c2",
                            "title":"false",
                            "value":"false"
                        }
                    ]
                }
            ]
        },
		{
			"name" : "bgColor",
			"properties" : [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"title_zh_cn":"背景颜色",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
				        "grouping" : "display"
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"title_zh_cn":"边框颜色",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"title_zh_cn":"字体颜色",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"title_zh_cn":"字体大小",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			]
		},
		{
			"name":"boundaryevent",
			"properties":[
				{
					"id":"boundarycancelactivity",
					"type":"Choice",
					"title":"CancelActivity",
					"value":"false",
					"description":"Denotes whether the activity should be cancelled or not, i.e., whether the boundary catch event acts as an error or an escalation. If the activity is not cancelled, multiple instances of that handler can run concurrently.",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"true",
							"value":"true"
						},
						{
							"id": "c2",
							"title": "false",
							"value": "false"
						}
					]                                               
				}
			]
		},
 		{
 			"name":"catchEventAttributes",
 			"properties":[
				{
					"id":"dataoutputassociations",
					"type":"Dataassignment",
					"title":"DataOutputAssociations",
					"value":"",
					"description":"The Data Associations of the catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"dataoutput",
					"type":"Dataoutputsingle",
					"title":"DataOutput",
					"value":"",
					"description":"The Data Associations of the catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				}
 			]
 		},
 		{
 			"name":"throwEventAttributes",
 			"properties":[
				{
					"id":"eventdefinitions",
					"type":"String",
					"title":"EventDefinitions",
					"value":"",
					"description":"EventDefinitions (EventDefinition) is an attribute that defines the type of contained triggers expected for a catch Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true,
					"hidden":true,
                                        "visible":false
				},
				{
					"id":"datainputassociations",
					"type":"Dataassignment",
					"title":"DataInputAssociations",
					"value":"",
					"description":"The Data Associations of the throw Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				{
					"id":"datainput",
					"type":"Datainputsingle",
					"title":"Data Input",
					"value":"",
					"description":"The Data Associations of the throw Event.",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				}
 			]
 		},
 		{
 			"name" : "compensationThrowing",
 			"properties" : [
 				{
 					"id":"waitforcompletion",
					"type":"Choice",
					"title":"Wait for completion",
					"value":"true",
					"description":"Determine whether a throw compensation is performed synchronously or asynchronously.",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false,
                     "items": [
                         {
                             "id": "c1",
                             "title":"true",
                             "value":"true"
                         },
                         {
                             "id": "c2",
                             "title": "false",
                             "value": "false"
                         }
                     ]
 				}
 			]
 		},
 		{
 			"name" : "compensation",
 			"properties" : [
 				{
 					"id":"activityref",
					"type":"String",
					"title":"Activity reference",
					"value":"",
					"description":"The activity related to the compensation event",
					"readonly":false,
					"optional":true
 				}
 			]
 		},
 		{
 			"name":"interrupting",
 			"properties":[
 				{
					"id":"isinterrupting",
					"type":"Boolean",
					"title":"Is Interrupting",
					"value":true,
					"description":"This attribute denotes whether the Sub-Process encompassing the Event Sub-Process should be cancelled or not.",
					"inverseBoolean":false,
					"readonly":false,
					"optional":true,
					"hidden":true,
                    "visible":false,
					"refToView": [
						"frame",
						"frame2"
					]
				}
 			]
 		},
		{
			"name" : "diagram",
			"properties" : [
				/**
				{
					"id":"executable",
					"type":"Choice",
					"title":"Executable",
					"title_zh_cn":"可执行",
					"value":"true",
					"description":"Executable",
					"description_zh_cn":"该流程是否可以被引擎执行",
					"readonly":false,
					"optional":true,
					"sortno":9,
					"grouping":"extra",
                    "items": [
                        {
                            "id": "c1",
                            "title":"true",
                            "value":"true"
                        },
                        {
                            "id": "c2",
                            "title": "false",
                            "value": "false"
                        }
                    ]
				},
				{
					"id":"package",
					"type":"String",
					"title":"Package",
					"title_zh_cn":"包名",
					"value":"",
					"description":"Package",
					"readonly":false,
					"optional":true
				},
				{
					"id":"vardefs",
					"type":"Vardef",
					"title":"Variable Definitions",
					"value":"",
					"description":"Variable Definitions",
					"readonly":false,
					"optional":true
				},
				{
					"id":"adhocprocess",
					"type":"Choice",
					"title":"AdHoc",
					"title_zh_cn":"自由流程 (AdHoc)",
					"value":"false",
					"description":"Defines an AdHoc process",
					"description_zh_cn":"定义该流程为自由流程",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"false",
							"value":"false"
						},
						{
							"id": "c2",
							"title": "true",
							"value": "true"
						}
					]                                               
				},
				{
					"id":"imports",
					"type":"Import",
					"title":"Imports",
					"value":"",
					"description":"Comma-separated imports",
					"readonly":false,
					"optional":true
				},
				{
					"id":"globals",
					"type":"Global",
					"title":"Globals",
					"value":"",
					"description":"Comma-separated globals",
					"readonly":false,
					"optional":true
				},**/
				{
					"id":"id",
					"type":"String",
					"title":"流程定义Key",
					"value":".",
					"description":"Key 保存到数据库时的Key值",
					"description_zh_cn":"该流程的唯一标识ID",
					"readonly":false,
					"optional":false,
					"length":"40"
				},
				/**{
					"id":"version",
					"type":"String",
					"title":"Version",
					"title_zh_cn":"版本",
					"value":"",
					"description":"This defines the Version number of the Diagram.",
					"description_zh_cn":"定义该流程的版本号.",
					"readonly":false,
					"optional":true,
					"length":"40",
					"sortno":5
				},
				{
					"id":"targetnamespace",
					"type":"String",
					"title":"Target Namespace",
					"title_zh_cn":"目标命名空间",
					"value":"http://www.omg.org/bpmn20",
					"description":"Defines the XML namespace of the elements inside the document.",
					"description_zh_cn":"定义XML元素命名空间",
					"readonly":true,
					"optional":true,
					"length":"50",
					"grouping":"extra"
				},
				{
					"id":"typelanguage",
					"type":"String",
					"title":"TypeLanguage",
					"title_zh_cn":"类型语言",
					"value":"http://www.w3.org/2001/XMLSchema",
					"description":"This attribute identifies the type system used by the elements of this Definition.",
					"description_zh_cn":"流程定义的元素所使用的类型系统",
					"readonly":true,
					"optional":true,
					"length":"50",
					"grouping":"extra"
				}**/
			]
		},
		{
			"name": "flowElement",
			"properties" : [
			]
		},
		{
			"name" : "itemAwareElement",
			"properties" : [
				{
					"id" : "itemsubjectref",
					"type" : "String",
					"title" : "ItemSubjectRef",
					"description" : "Specification of the items that are stored or conveyed by the ItemAwareElement",
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				},
				{
					"id" : "datastate",
					"type" : "String",
					"title" : "DataState",
					"description" : "A reference to the DataState, which defines certain states for the data contained in the item.",
					"readonly" : false,
					"optional" : true,
					"length" : 50,
					"wrapLines" : true
				}
			]
		},
		{
			"name" : "iospecification",
			"properties" : [
				{
					"id":"datainputset",
					"type":"Datainput",
					"title":"DataInputSet",
					"value":"",
					"description":"An InputSet is a collection of DataInput elements that together define a valid set of data inputs.",
					"readonly":false,
					"optional":true,
					"fortasktypes":"Business Rule"
				},
				{
					"id":"dataoutputset",
					"type":"Dataoutput",
					"title":"DataOutputSet",
					"value":"",
					"description":"An OutputSet is a collection of DataOutputs elements that together may be produced as output from an Activity or Event.",
					"readonly":false,
					"optional":true,
					"fortasktypes":"Business Rule"
				}
			]
		},
		{
			"name" : "processEvent",
			"properties": [				
				{
					"id":"WORKFLOW_STARTED",
					"type":"Expression",
					"title":"开始流程",
					"value":"",
					"description":"WORKFLOW_STARTED 开始流程",
					"readonly":false,
					"optional":true,
					"grouping":"event",
					"sortno":1
				},
				{
					"id":"WORKFLOW_ENDED",
					"type":"Expression",
					"title":"结束流程",
					"value":"",
					"description":"WORKFLOW_ENDED 结束流程",
					"readonly":false,
					"optional":true,
					"grouping":"event",
					"sortno":2
				}
			]
		},
		{
			"name" : "activityEvent",
			"properties": [				
				{
					"id":"ACTIVITY_STARTED",
					"type":"Expression",
					"title":"开始环节",
					"value":"",
					"description":"ACTIVITY_STARTED 开始环节",
					"readonly":false,
					"optional":true,
					"grouping":"event",
					"sortno":3
				},
				{
					"id":"ACTIVITY_EXECUTE",
					"type":"Expression",
					"title":"执行环节",
					"value":"",
					"description":"ACTIVITY_EXECUTE 执行环节",
					"readonly":false,
					"optional":true,
					"grouping":"event",
					"sortno":4
				},
				{
					"id":"ACTIVITY_ENDED",
					"type":"Expression",
					"title":"结束环节",
					"value":"",
					"description":"ACTIVITY_ENDED 结束环节",
					"readonly":false,
					"optional":true,
					"grouping":"event",
					"sortno":5
				}
			]
		},
		{
			"name" : "taskEvent",
			"properties": [				
				{
					"id":"TASK_CREATED",
					"type":"Expression",
					"title":"创建任务",
					"value":"",
					"description":"TASK_CREATED 创建任务",
					"readonly":false,
					"optional":true,
					"grouping":"event",
					"sortno":6
				},
				{
					"id":"TASK_CLAIMED",
					"type":"Expression",
					"title":"认领任务",
					"value":"",
					"description":"TASK_CLAIMED 认领任务",
					"readonly":false,
					"optional":true,
					"grouping":"event",
					"sortno":7
				},
				{
					"id":"TASK_ENDED",
					"type":"Expression",
					"title":"结束任务",
					"value":"",
					"description":"TASK_ENDED 结束任务",
					"readonly":false,
					"optional":true,
					"grouping":"event",
					"sortno":8
				},
				{
					"id":"BEFORE_TASKS_CREATED",
					"type":"Expression",
					"title":"创建任务之前",
					"value":"",
					"description":"BEFORE_TASKS_CREATED 创建任务之前",
					"readonly":false,
					"optional":true,
					"grouping":"event",
					"sortno":9
				}
			]
		},
		{
			"name" : "actorCandidates",
			"properties":[
                {
                    "id":"quickcandidates",
                    "type":"QuickCandidates",
                    "title":"quickcandidates",
                    "title_zh_cn":"快捷选择参与者",
                    "value":"",
                    "description":"quickcandidates",
                    "description_zh_cn":"quickcandidates 快捷选择参与者，设置该任务的参与者",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
					"sortno": 1
				},
                {
                    "id":"candidates",
                    "type":"Combobox",
                    "title":"candidates",
                    "title_zh_cn":"参与者",
                    "value":"",
                    "description":"candidates",
                    "description_zh_cn":"candidates 参与者，设置该任务的参与者",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
					"sortno": 2,
                    "items": [
                        {
                            "id": "c0",
                            "title": "无",
                            "value": " "
                        },
                        {
                            "id": "c1",
                            "title":"复合",
                            "value":"MultipleActor",
                            "properties": [
                                {
                                	"id":"bgcolor",
                                	"type":"Color",
                                	"title":"Background Color",
                                	"title_zh_cn":"背景颜色",
                                	"value":"#cfe1f1",
                                	"description":"",
                                	"readonly":false,
                                	"optional":false,
                                	"refToView": "fill_el",
                                	"fill":true,
                                	"stroke":false
                                }]
                            
                        },
                        {
                            "id": "c2",
                            "title": "角色",
                            "value": "RoleActor"
                        },
                        {
                            "id": "c3",
                            "title": "环节历史",
                            "value": "ActivityActor"
                        },
                        {
                            "id": "c4",
                            "title": "脚本",
                            "value": "ScriptActor"
                        },
                        {
                            "id": "c5",
                            "title": "指定用户",
                            "value": "UserActor",
                            "properties": [
                                {
                                	"id":"userIds",
                                	"type":"String",
                                	"title":"userIds",
                                	"title_zh_cn":"用户Id",
                                	"value":"",
                                	"description":"",
                                	"readonly":false,
                                	"optional":false,
                                	"fill":true,
                                	"stroke":false
                                },
                                {
                                	"id":"userNames",
                                	"type":"String",
                                	"title":"userNames",
                                	"title_zh_cn":"用户名称",
                                	"value":"",
                                	"description":"",
                                	"readonly":false,
                                	"optional":true,
                                	"fill":true,
                                	"stroke":false
                                }]
                        },
                        {
                            "id": "c6",
                            "title": "指定部门",
                            "value": "OrgActor"
                        },
                        {
                            "id": "c7",
                            "title": "职务",
                            "value": "DutyActor"
                        },
                        {
                            "id": "c8",
                            "title": "岗位",
                            "value": "PostActor"
                        }
                    ]
                },
                /*{
                    "id":"logic",
                    "type":"Combobox",
                    "title":"logic",
                    "title_zh_cn":"逻辑操作",
                    "value":"and",
                    "description":"Sets the multiple instances collection output.",
                    "description_zh_cn":"logic 逻辑操作，子参与者集合里面的关系由该逻辑决定，or为或，遇到参与者有数据就返回该参与者的数据，后面的参与者就不求解了，and是所有的子参与者都需要求解出数据",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"MultipleActor",
                    "sortno": 3,
                    "items": [
                        {
                            "id": "c1",
                            "title": "and",
                            "value": "and"
                        },
                        {
                            "id": "c2",
                            "title": "or",
                            "value": "or"
                        }
                    ]
                },*/
                {
                    "id":"actorlist",
                    "type":"String",
                    "title":"actorlist",
                    "title_zh_cn":"子参与者",
                    "value":"",
                    "description":"actorlist",
                    "description_zh_cn":"actorList 复合参与者的子参与者集合",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"MultipleActor",
                    "sortno": 4
                },
                {
                    "id":"userids",
                    "type":"String",
                    "title":"UserIds",
                    "title_zh_cn":"用户标志",
                    "value":"",
                    "description":"UserIds. user's login id",
                    "description_zh_cn":"userIds 用户参与者的用户标志，可以是多个，用逗号分隔",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"UserActor",
                    "sortno": 5
                },
                {
                    "id":"usernames",
                    "type":"String",
                    "title":"UserNames",
                    "title_zh_cn":"用户名",
                    "value":"",
                    "description":"用户名.",
                    "description_zh_cn":"userNames 用户参与者的名称，可以是多个，用逗号分隔",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"UserActor",
                    "sortno": 6
                },
                {
                    "id":"actorname",
                    "type":"String",
                    "title":"actorname",
                    "title_zh_cn":"Name",
                    "value":"",
                    "description":"名称",
                    "description_zh_cn":"Name 参与者的名称",
                    "readonly":false,
                    "optional":true,
					"hidden":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"Actor|UserActor|OrgActor|ActivityActor|RoleActor|PostActor|DutyActor|MultipleActor|ScriptActor",
                    "sortno": 6
                },
                {
                    "id":"actorbean",
                    "type":"String",
                    "title":"actorbean",
                    "title_zh_cn":"Bean",
                    "value":"",
                    "description":"Bean",
                    "description_zh_cn":"Bean 参与者的Bean解析类",
                    "readonly":false,
                    "optional":true,
					"hidden":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"Actor|UserActor|OrgActor|ActivityActor|RoleActor|PostActor|DutyActor|MultipleActor|ScriptActor",
                    "sortno": 6
                },
                {
                    "id":"actordesc",
                    "type":"String",
                    "title":"actordesc",
                    "title_zh_cn":"参与者描述",
                    "value":"",
                    "description":"Decription",
                    "description_zh_cn":"Decription 参与者的描述",
                    "readonly":false,
                    "optional":true,
                    "hidden":false,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"Actor|UserActor|OrgActor|ActivityActor|RoleActor|PostActor|DutyActor|MultipleActor|ScriptActor",
                    "sortno": 5
                },
                {
                    "id":"actorproperty",
                    "type":"String",
                    "title":"actorproperty",
                    "title_zh_cn":"扩展属性",
                    "value":"",
                    "description":"扩展属性",
                    "description_zh_cn":"property 扩展属性",
                    "readonly":false,
                    "optional":true,
					"hidden":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"Actor|UserActor|OrgActor|ActivityActor|RoleActor|PostActor|DutyActor|MultipleActor|ScriptActor",
                    "sortno": 6
                },
                {
                    "id":"orgids",
                    "type":"String",
                    "title":"OrgIds",
                    "title_zh_cn":"部门ID",
                    "value":"",
                    "description":"OrgIds.",
                    "description_zh_cn":"部门ID",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"OrgActor",
                    "sortno": 7
                },
                {
                    "id":"orgnames",
                    "type":"String",
                    "title":"OrgNames",
                    "title_zh_cn":"部门名",
                    "value":"",
                    "description":"OrgNames.",
                    "description_zh_cn":"orgNames 部门参与者的名称，可以是多个，用逗号分隔",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"OrgActor",
                    "sortno": 8
                },
                {
                    "id":"baseactor",
                    "type":"String",
                    "title":"baseActor",
                    "title_zh_cn":"所属部门",
                    "value":"",
                    "description":"baseActor.",
                    "description_zh_cn":"baseActor 所属部门的求解依据，可以是部门、用户参与者，用户会找到用户所在部门",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"RoleActor|DutyActor",
                    "sortno": 9
                },
                {
                    "id":"baseactordesc",
                    "type":"String",
                    "title":"baseActor Description",
                    "title_zh_cn":"所属部门描述",
                    "value":"",
                    "description":"baseActor.",
                    "description_zh_cn":"baseActor 所属部门的求解依据，可以是部门、用户参与者，用户会找到用户所在部门",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"RoleActor|DutyActor",
                    "sortno": 9
                },
                {
                    "id":"roleids",
                    "type":"String",
                    "title":"RoleIds",
                    "title_zh_cn":"角色ID",
                    "value":"",
                    "description":"RoleIds.",
                    "description_zh_cn":"角色ID",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"RoleActor",
                    "sortno": 10
                },
                {
                    "id":"rolenames",
                    "type":"String",
                    "title":"RoleNames",
                    "title_zh_cn":"角色名",
                    "value":"",
                    "description":"RoleNames.",
                    "description_zh_cn":"角色名",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"RoleActor",
                    "sortno": 11
                },
                {
                    "id":"incomingactivitynames",
                    "type":"String",
                    "title":"incomingActivityNames",
                    "title_zh_cn":"迁入环节名",
                    "value":"",
                    "description":"incomingActivityNames.",
                    "description_zh_cn":"incomingActivityNames 迁入环节的名称，只有这些环节提交过来的待办才会启用该参与者",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"ActivityActor",
                    "sortno": 12
                },
                {
                    "id":"activitynames",
                    "type":"String",
                    "title":"activityNames",
                    "title_zh_cn":"参照环节名",
                    "value":"",
                    "description":"activityNames.",
                    "description_zh_cn":"activityNames 参照环节的名称，获取参照环节的历史参与者，默认为空的话则获取本环节的历史参与者",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"ActivityActor",
                    "sortno": 13
                },
                {
                    "id":"actorscript",
                    "type":"Expression",
                    "title":"script",
                    "title_zh_cn":"脚本",
                    "value":"",
                    "description":"activityNames.",
                    "description_zh_cn":"script 脚本",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"ScriptActor",
                    "sortno": 14
                },
                {
                    "id":"dutyids",
                    "type":"String",
                    "title":"DutyIds",
                    "title_zh_cn":"职务ID",
                    "value":"",
                    "description":"DutyIds.",
                    "description_zh_cn":"职务ID",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"DutyActor",
                    "sortno": 15
                },
                {
                    "id":"dutynames",
                    "type":"String",
                    "title":"DutyNames",
                    "title_zh_cn":"职务名",
                    "value":"",
                    "description":"DutyNames.",
                    "description_zh_cn":"职务名",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"DutyActor",
                    "sortno": 16
                },
                {
                    "id":"postids",
                    "type":"String",
                    "title":"PostIds",
                    "title_zh_cn":"岗位ID",
                    "value":"",
                    "description":"PostIds.",
                    "description_zh_cn":"岗位ID",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"PostActor",
                    "sortno": 17
                },
                {
                    "id":"postnames",
                    "type":"String",
                    "title":"PostNames",
                    "title_zh_cn":"岗位名",
                    "value":"",
                    "description":"PostNames.",
                    "description_zh_cn":"岗位名",
                    "readonly":false,
                    "optional":true,
                    "grouping":"actor",
                    "ifproptrue":"candidates",
                    "ifpropvalue":"PostActor",
                    "sortno": 18
                }
			]	
		},
		{
			"name" : "activity",
			"properties": [
				{
					"id":"isforcompensation",
					"type":"Boolean",
					"title":"Is for Compensation",
					"title_zh_cn":"是否补偿",
					"value":false,
					"description":"A flag that identifies whether this activity is intended for the purposes of compensation.",
					"description_zh_cn":"标识环节为补偿环节.",
					"readonly":false,
					"optional":true,
					"refToView":"compensation",
					"hidden":true,
                    "visible":false
				},
				{
					"id":"extensionproperties",
					"type":"Complex",
					"title":"Properties",
					"title_zh_cn":"扩展属性",
					"value":"",
					"description":"Properties",
					"description_zh_cn":"扩展属性",
					"readonly":false,
					"optional":true,
					"grouping":"extra",
					"sortno":9,
					"complexItems": [
						{
				        	"id":"key",
				        	"type":"String",
				        	"width":150,
				        	"value":"",
				        	"name":"Key"
				        },
						{
				        	"id":"value",
				        	"type":"String",
				        	"width":300,
				        	"value":"",
				        	"name":"Value"
				        }
					]
				},
 				{
                    "id":"multipleinstance",
                    "type":"Choice",
                    "title":"Multiple Instance",
                    "title_zh_cn":"多实例",
                    "value":"false",
                    "description":"Specifies whether the task is a multiple instance task.",
                    "description_zh_cn":"指定这个环节是否为多实例的环节",
                    "readonly":false,
                    "optional":true,
		            "grouping":"mi",
                    "items": [
                        {
                            "id": "c1",
                            "title":"是",
                            "value":"true",
                            "refToView":"parallel"
                        },
                        {
                            "id": "c2",
                            "title": "否",
                            "value": "false",
                            "refToView":"none"
                        }
                    ]
                },
                {
                    "id":"miissequential",
                    "type":"Choice",
                    "title":"MI IsSequential",
                    "title_zh_cn":"多实例是否串行",
                    "value":"",
                    "description":"Sets the multiple instances collection output.",
                    "description_zh_cn":"多实例的审批是否串行.",
                    "readonly":false,
                    "optional":true,
		            "grouping":"mi",
                    "ifproptrue":"multipleinstance",
                    "items": [
                        {
                            "id": "c1",
                            "title":"true",
                            "value":"true",
                            "refToView":"sequential"
                        },
                        {
                            "id": "c2",
                            "title": "false",
                            "value": "false",
                            "refToView":"parallel"
                        }
                    ]
                },
                {
                    "id":"micollection",
                    "type":"String",
                    "title":"MI Collection",
                    "title_zh_cn":"多实例参与者集合",
                    "value":"assigneeList",
                    "description":"Sets a Collection for MI.",
                    "description_zh_cn":"多实例参与者集合",
                    "readonly":false,
                    "optional":true,
		            "grouping":"mi",
                    "ifproptrue":"multipleinstance"
                },
                {
                    "id":"mielementvariable",
                    "type":"String",
                    "title":"MI ElementVariable",
                    "title_zh_cn":"多实例参与者变量",
                    "value":"",
                    "description":"Sets a ElementVariable for MI.",
                    "description_zh_cn":"多实例参与者变量",
                    "readonly":false,
                    "optional":true,
		            "grouping":"mi",
                    "ifproptrue":"multipleinstance"
                },
                {
                    "id":"micompletioncondition",
                    "type":"Expression",
                    "title":"MI CompletionCondition",
                    "title_zh_cn":"多实例完成条件",
                    "value":"",
                    "description":"Sets a CompletionCondition for MI.",
                    "description_zh_cn":"多实例完成条件",
                    "readonly":false,
                    "optional":true,
		            "grouping":"mi",
                    "ifproptrue":"multipleinstance"
                }
				/**
			    ,{
					"id":"assignments",
					"type":"Dataassignment",
					"title":"Assignments",
					"title_zh_cn":"指派",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Send|Receive|User|Manual|Service|Business Rule"
                }**/
			]
		},
		{
			"name" : "customactivity",
			"properties": [
				{
					"id":"isforcompensation",
					"type":"Boolean",
					"title":"Is for Compensation",
					"value":false,
					"description":"A flag that identifies whether this activity is intended for the purposes of compensation.",
					"readonly":true,
					"optional":true,
					"refToView":"compensation",
					"hidden":true,
                                        "visible":false
				}
			]
		},
		{
			"name":"operation",
			"properties": [
				{
					"id":"operationname",
					"type":"String",
					"title":"OperationName",
					"value":"",
					"description":"The descriptive name for the operation element.",
					"readonly":false,
					"optional":"true"
				},
				{
					"id":"inmessagename",
					"type":"String",
					"title":"InMessageName",
					"value":"",
					"description":"The descriptive name for the InMessage element",
					"readonly":false,
					"optional":"true"
				},
				{
					"id":"inmsgitemkind",
					"type":"Choice",
					"title":"InMessageItemKind",
					"value":"Information",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"c1",
							"title":"Physical",
							"value":"Physical"
						},
						{
							"id":"c2",
							"title":"Information",
							"value":"Information"
						}
					]
				},
				{
					"id":"inmsgstructure",
					"type":"String",
					"title":"InMessageStructure",
					"value":"",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"inmsgimport",
					"type":"Complex",
					"title":"InMessageImport",
					"value":"",
					"description":"Identifies the location of the data structure and its format. If the importType attribute is left unspecified, the typeLanguage specified in the Definitions is assumed.",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
				        	"id":"c1",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"ImportType"
				        },
						{
				        	"id":"c2",
				        	"type":"String",
				        	"width":100,
				        	"value":"",
				        	"name":"Location"
				        },
						{
				        	"id":"c3",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"Namespace"
				        }
					]
				},
				{
					"id":"inmsgiscollection",
					"type":"Boolean",
					"title":"InMessageIsCollection",
					"value":false,
					"description":"Setting this flag to true indicates that the actual data type is a collection.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"outmessagename",
					"type":"String",
					"title":"OutMessageName",
					"value":"",
					"description":"The descriptive name for the OutMessage element",
					"readonly":false,
					"optional":"true"
				},
				{
					"id":"outmsgitemkind",
					"type":"Choice",
					"title":"OutMessageItemKind",
					"value":"Information",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"c1",
							"title":"Physical",
							"value":"Physical"
						},
						{
							"id":"c2",
							"title":"Information",
							"value":"Information"
						}
					]
				},
				{
					"id":"outmsgstructure",
					"type":"String",
					"title":"OutMessageStructure",
					"value":"",
					"description":"This defines the nature of the Item. Possible values are Physical or Information. The default value is Information.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"outmsgimport",
					"type":"Complex",
					"title":"OutMessageImport",
					"value":"",
					"description":"Identifies the location of the data structure and its format. If the importType attribute is left unspecified, the typeLanguage specified in the Definitions is assumed.",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
				        	"id":"c1",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"ImportType"
				        },
						{
				        	"id":"c2",
				        	"type":"String",
				        	"width":100,
				        	"value":"",
				        	"name":"Location"
				        },
						{
				        	"id":"c3",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"Namespace"
				        }
					]
				},
				{
					"id":"outmsgiscollection",
					"type":"Boolean",
					"title":"OutMessageIsCollection",
					"value":false,
					"description":"Setting this flag to true indicates that the actual data type is a collection.",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"name" : "loopcharacteristics",
			"properties" : [
				{
					"id":"looptype",
					"type":"Choice",
					"title":"LoopType",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Standard",
							"value":"Standard",
							"icon" : "activity/list/looptype.standard.png",
							"refToView":"loop"
						},
						{
							"id":"c3",
							"title":"MI Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"parallel"
						},
						{
							"id":"c4",
							"title":"MI Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"sequential"
						}	
					]
				},
				{
					"id":"testbefore",
					"type":"Boolean",
					"title":"TestBefore",
					"value":false,
					"description":"Flag that controls whether the loop condition is evaluated at the beginning (testBefore = true) or at the end (testBefore = false)of the loop iteration.",
				},
				{
					"id":"loopcondition",
					"type":"String",
					"title":"LoopCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"loopmaximum",
					"type":"Integer",
					"title":"LoopMaximum",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"min":"0"
				},
				{
					"id":"loopcardinality",
					"type":"String",
					"title":"LoopCardinality",
					"value":"",
					"description":"A numeric Expression that controls the number of Activity instances that will be created. This Expression MUST evaluate to an integer.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"loopdatainput",
					"type":"String",
					"title":"LoopDataInput",
					"value":"",
					"description":"A reference to a DataInput which is part of the Activity InputOutputSpecification. This DataInput is used to determine the number of Activity instances, one Activity instance per item in the collection of data stored in that DataInput element.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"loopdataoutput",
					"type":"String",
					"title":"LoopDataInput",
					"value":"",
					"description":"A reference to a DataOutput which is part of the Activity InputOutputSpecification.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"inputdataitem",
					"type":"String",
					"title":"InputDataItem",
					"value":"",
					"description":"A Property, representing for every Activity instance the single item of the collection stored in the loopDataInput.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"outputdataitem",
					"type":"String",
					"title":"OutputDataItem",
					"value":"",
					"description":"A Property, representing for every Activity instance the single item of the collection stored in the loopDataOutput.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"complexbehaviordefinition",
					"type":"Complex",
					"title":"ComplexBehaviorDefinition:",
					"description":"Controls when and which Events are thrown in case behavior is set to complex.",
					"value":"",
					"optional":true,
					"readonly":false,
					"complexItems": [
				        {
				        	"id":"cexpression",
				        	"type":"String",
				        	"width":200,
				        	"value":"",
				        	"name":"Condition"
				        },
				        {
				        	"id":"ceventdefinition",
				        	"type":"Choice",
				        	"value":"signal",
				        	"width":100,
				        	"name":"EventDefinition",
				        	"items":[
			        	        {
			        	        	"id":"cnone",
			        	        	"value":"None",
			        	        	"title":"None"
			        	        },
			        	        {
			        	        	"id":"cmessage",
			        	        	"value":"Message",
			        	        	"title":"Message"
			        	        },
			        	        {
			        	        	"id":"cescalation",
			        	        	"value":"Escalation",
			        	        	"title":"Escalation"
			        	        },
			        	        {
			        	        	"id":"cerror",
			        	        	"value":"Error",
			        	        	"title":"Error"
			        	        },
			        	        {
			        	        	"id":"ccancel",
			        	        	"value":"Cancel",
			        	        	"title":"Cancel"
			        	        },
			        	        {
			        	        	"id":"ccompensation",
			        	        	"value":"Compensation",
			        	        	"title":"Compensation"
			        	        },
			        	        {
			        	        	"id":"csignal",
			        	        	"value":"Signal",
			        	        	"title":"Signal"
			        	        },
			        	        {
			        	        	"id":"cterminate",
			        	        	"value":"Terminate",
			        	        	"title":"Terminate"
			        	        }
				        	]
				        }
					]
				},
				{
		        	"id":"onebehavioreventref",
		        	"type":"Choice",
		        	"value":"signal",
		        	"title":"OneBehaviorEventRef",
		        	"description":"The EventDefinition which is thrown when behavior is set to one and the first internal Activity instance has completed.",
		        	"items":[
	        	        {
	        	        	"id":"cnone",
	        	        	"value":"None",
	        	        	"title":"None"
	        	        },
	        	        {
	        	        	"id":"cmessage",
	        	        	"value":"Message",
	        	        	"title":"Message"
	        	        },
	        	        {
	        	        	"id":"cescalation",
	        	        	"value":"Escalation",
	        	        	"title":"Escalation"
	        	        },
	        	        {
	        	        	"id":"cerror",
	        	        	"value":"Error",
	        	        	"title":"Error"
	        	        },
	        	        {
	        	        	"id":"ccancel",
	        	        	"value":"Cancel",
	        	        	"title":"Cancel"
	        	        },
	        	        {
	        	        	"id":"ccompensation",
	        	        	"value":"Compensation",
	        	        	"title":"Compensation"
	        	        },
	        	        {
	        	        	"id":"csignal",
	        	        	"value":"Signal",
	        	        	"title":"Signal"
	        	        },
	        	        {
	        	        	"id":"cterminate",
	        	        	"value":"Terminate",
	        	        	"title":"Terminate"
	        	        }
		        	]
		        },
		        {
		        	"id":"nonebehavioreventref",
		        	"type":"Choice",
		        	"value":"signal",
		        	"title":"NoneBehaviorEventRef",
		        	"items":[
	        	        {
	        	        	"id":"cnone",
	        	        	"value":"None",
	        	        	"title":"None"
	        	        },
	        	        {
	        	        	"id":"cmessage",
	        	        	"value":"Message",
	        	        	"title":"Message"
	        	        },
	        	        {
	        	        	"id":"cescalation",
	        	        	"value":"Escalation",
	        	        	"title":"Escalation"
	        	        },
	        	        {
	        	        	"id":"cerror",
	        	        	"value":"Error",
	        	        	"title":"Error"
	        	        },
	        	        {
	        	        	"id":"ccancel",
	        	        	"value":"Cancel",
	        	        	"title":"Cancel"
	        	        },
	        	        {
	        	        	"id":"ccompensation",
	        	        	"value":"Compensation",
	        	        	"title":"Compensation"
	        	        },
	        	        {
	        	        	"id":"csignal",
	        	        	"value":"Signal",
	        	        	"title":"Signal"
	        	        },
	        	        {
	        	        	"id":"cterminate",
	        	        	"value":"Terminate",
	        	        	"title":"Terminate"
	        	        }
		        	]
		        }
			]
		},
		{
			"name" : "customloopcharacteristics",
			"properties" : [
				{
					"id":"looptype",
					"type":"Choice",
					"title":"LoopType",
					"value":"None",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Standard",
							"value":"Standard",
							"icon" : "activity/list/looptype.standard.png",
							"refToView":"loop"
						},
						{
							"id":"c3",
							"title":"MI Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"parallel"
						},
						{
							"id":"c4",
							"title":"MI Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"sequential"
						}	
					]
				},
				{
					"id":"completioncondition",
					"type":"String",
					"title":"CompletionCondition:",
					"description":"This attribute defines a Boolean Expression that when evaluated to true, cancels the remaining Activity instances and produces a token.",
					"value":""
				}
			]
		},
		{
			"name" : "task",
			"properties" : [
				/**{
					"id":"tasktype",
					"type":"Choice",
					"title":"TaskType",
					"title_zh_cn":"任务类型",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"directlyEditable":false,
					 "grouping":"extra",
					"items":[
						{
							"id":"c4",
							"title":"User",
							"title_zh_cn":"用户任务",
							"value":"User",
							"icon" : "activity/list/type.user.png",
							"refToView":"userTask"
						},
						{
							"id":"c6",
							"title":"Service",
							"title_zh_cn":"服务任务",
							"value":"Service",
							"icon" : "activity/list/type.service.png",
							"refToView":"serviceTask"
						},
						{
							"id":"c8",
							"title":"Script",
							"title_zh_cn":"脚本任务",
							"value":"Script",
							"icon" : "activity/list/type.script.png",
							"refToView":"scriptTask"
						},
						{
							"id":"c9",
							"title":"Draft",
							"title_zh_cn":"拟稿任务",
							"value":"Draft",
							"icon" : "activity/list/type.user.png",
							"refToView":"userTask"
						},
						{
							"id":"c10",
							"title":"Notify",
							"title_zh_cn":"通知任务",
							"value":"Notify",
							"icon" : "activity/list/type.send.png",
							"refToView":"sendTask"
						},
						{
							"id":"c1",
							"title":"Task",
							"title_zh_cn":"任务",
							"value":"None",
							"icon" : "activity/task.png",
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Send",
							"title_zh_cn":"发送任务",
							"value":"Send",
							"icon" : "activity/list/type.send.png",
							"refToView":"sendTask"
						},
						{
							"id":"c3",
							"title":"Receive",
							"title_zh_cn":"接收任务",
							"value":"Receive",
							"icon" : "activity/list/type.receive.png",
							"refToView":"receiveTask"
						},
						{
							"id":"c5",
							"title":"Manual",
							"title_zh_cn":"手工任务",
							"value":"Manual",
							"icon" : "activity/list/type.manual.png",
							"refToView":"manualTask"	
						},
						{
							"id":"c7",
							"title":"Business Rule",
							"title_zh_cn":"业务规则任务",
							"value":"Business Rule",
							"icon" : "activity/list/type.business.rule.png",
							"refToView":"businessRuleTask"
						}
					]
				}**/
				/**{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"title_zh_cn":"消息",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50",
					"fortasktypes":"None|Send|Receive"
				},**/
			]
		},
		{
			"name" : "taskAttributes",
			"properties" : [
				
			]
		},
		{
			"name" : "taskDisplay",
			"properties" : [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"title_zh_cn":"背景颜色",
					"value":"#cfe1f1",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
				        "grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"title_zh_cn":"原始背景颜色",
					"value":"#cfe1f1",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"title_zh_cn":"边框颜色",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"title_zh_cn":"原始边框颜色",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"title_zh_cn":"字体颜色",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"title_zh_cn":"字体大小",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}		
			]
		},		
		{
			"name" : "subprocess",
			"properties" : [
				{
					"id":"isadhoc",
					"type":"Boolean",
					"title":"isAdHoc",
					"title_zh_cn":"是否自由流",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"adhoc",
					"hidden":true,
                                        "visible":false
				},
				{
					"id":"adhocordering",
					"type":"Choice",
					"title":"",
					"value":"Sequential",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"sequential"
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"parallel"
						}
					]
				},
				{
					"id":"adhoccompletioncondition",
					"type":"Expression",
					"title":"AdHocCompletionCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":""
				},
				{
					"id":"adhoccancelremaininginstances",
					"type":"Boolean",
					"title":"AdhocCancelRemainingInstances",
					"value":true,
					"description":"This attribute is used only if ordering is parallel. It determines whether running instances are cancelled when the completionCondition becomes true.",
					"readonly":false,
					"optional":true,
					"hidden":true,
                                        "visible":false
				}
			]
		},
		{
			"name" : "adhocsubprocess",
			"properties" : [
				{
					"id":"isadhoc",
					"type":"Boolean",
					"title":"isAdHoc",
					"value":true,
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"adhoc",
					"hidden":true,
                                        "visible":false
				},
				{
					"id":"adhocordering",
					"type":"Choice",
					"title":"AdHocOrdering",
					"value":"Sequential",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"none",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"misequential"
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"miparallel"
						}
					]
				},
				{
					"id":"adhoccompletioncondition",
					"type":"Expression",
					"title":"AdHocCompletionCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":""
				},
				{
					"id":"adhoccancelremaininginstances",
					"type":"Boolean",
					"title":"AdhocCancelRemainingInstances",
					"value":true,
					"description":"This attribute is used only if ordering is parallel. It determines whether running instances are cancelled when the completionCondition becomes true.",
					"readonly":false,
					"optional":true,
					"hidden":true,
                                        "visible":false
				}
			]
		},
		{
			"name" : "gateway",
			"properties" : [

			]
		},
		{
			"name" : "Connections",
			"properties" : [
			]
		},
		{
			"name":"process",
			"properties":[
				{
					"id":"processtype",
					"type":"Choice",
					"title":"ProcessType",
					"value":"None",
					"description":"The processType attribute Provides additional information about the level of abstraction modeled by this Process.",
					"readonly":false,
					"optional":false,
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None"
						},
						{
							"id":"c2",
							"title":"Executable",
							"value":"Executable"
						},
						{
							"id":"c3",
							"title":"Non-Executable",
							"value":"Non-Executable"
						},
						{
							"id":"c4",
							"title":"Public",
							"value":"Public"
						}
					]
				},
				{
					"id":"isclosed",
					"type":"Boolean",
					"title":"isClosed",
					"value":false,
					"description":"A Boolean value specifying whether interactions, such as sending and receiving Messages and Events, not modeled in the Process can occur when the Process is executed or performed. If the value is true, they MAY NOT occur. If the value is false, they MAY occur.",
					"readonly":false,
					"optional":false
				}
			]
		},
		{
			"name" : "pool",
			"properties" : [
				{
					"id" : "multiinstance",
					"type" : "Boolean",
					"title" : "is Multi Instance Participant",
					"value" : false,
					"description" : "",
					"readonly" : false,
					"optional" : true,
					"refToView" : "multiInstance"
				},
				{
					"id":"boundaryvisible",
					"type":"Boolean",
					"title":"BoundaryVisible",
					"value":true,
					"description":"Defines if the rectangular boundary for the Pool is visible.",
					"readonly":false,
					"optional":false,
					"refToView": ["border", "c", "caption", "captionDisableAntialiasing"],
					"visible":false
				},
				{
					"id":"processname",
					"type":"String",
					"title":"ProcessName",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"status",
					"type":"Choice",
					"title":"Status",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":false,
					"items": [
						{
							"id":"c1",
							"title":"None",
							"value":"None"
						},
						{
							"id":"c2",
							"title":"Ready",
							"value":"Ready"
						},
						{
							"id":"c3",
							"title":"Active",
							"value":"Active"
						},
						{
							"id":"c4",
							"title":"Cancelled",
							"value":"Cancelled"
						},
						{
							"id":"c5",
							"title":"Aborting",
							"value":"Aborting"
						},
						{
							"id":"c6",
							"title":"Aborted",
							"value":"Aborted"
						},
						{
							"id":"c7",
							"title":"Completing",
							"value":"Completing"
						},
						{
							"id":"c8",
							"title":"Completed",
							"value":"Completed"
						}
					]
				},
				{
					"id":"adhoc",
					"type":"Boolean",
					"title":"AdHoc",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"adhocordering",
					"type":"Choice",
					"title":"AdHocOrdering",
					"value":"Parallel",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"none",
					"items": [
						{
							"id":"c1",
							"title":"Sequential",
							"value":"Sequential",
							"icon" : "activity/list/mi.sequential.png",
							"refToView":"misequential"
						},
						{
							"id":"c2",
							"title":"Parallel",
							"value":"Parallel",
							"icon" : "activity/list/mi.parallel.png",
							"refToView":"miparallel"
						}
					]
				},
				{
					"id":"adhoccompletioncondition",
					"type":"Expression",
					"title":"AdHocCompletionCondition",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"suppressjoinfailure",
					"type":"Boolean",
					"title":"SuppressJoinFailure",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"enableinstancecompensation",
					"type":"Boolean",
					"title":"EnableBooleanCompensation",
					"value":false,
					"description":"",
					"readonly":false,
					"optional":false
				},
				{
					"id":"processcategories",
					"type":"String",
					"title":"ProcessCategories",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				},
				{
					"id":"processdocumentation",
					"type":"String",
					"title":"Process Documentation",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"",
					"wrapLines":true,
					"grouping":"extra"
				}
			]
		},
		{
			"name" : "dataAssociation",
			"properties" : [
			    {
					"id":"assignments",
					"type":"Dataassignment",
					"title":"Assignments",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"complexItems": [
						{
							"id":"to",
							"name":"To",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false 
						},
						{
							"id":"from",
							"name":"From",
							"type":"String",
							"value":"",
							"width":100,
							"optional":false
						}
					]
			    },
			    {
					"id":"transformation",
					"title":"Transformation",
					"type":"String",
					"value":"",
					"optional":true
				}
			]
		}
	],
	"stencils" : [
 		{
			"type":				"node",
			"id":				"BPMNDiagram",
			"title":			"BPMN-Diagram",
			"title_zh_cn":			"BPMN2流程图",
			"groups":			["Diagram"],
			"description":		"A BPMN 2.0 Diagram.",
			"description_zh_cn":		"BPMN 2.0 流程图.",
			"view":				"diagram.svg",
			"icon":				"diagram.png",
			"mayBeRoot":		true,
			"hide":				true,
			"propertyPackages" : [
				 "diagram",
				 "processEvent",
				"activityEvent",
				"taskEvent"
			],
			"roles":			["canContainConnectionss"],
			"properties": [
				{
					"id":"processn",
					"type":"String",
					"title":"Process Name",
					"title_zh_cn":"流程定义名称",
					"value":"",
					"description":"Process Name",
					"description_zh_cn":"该BPMN流程的名称",
					"readonly":false,
					"optional":false,
					"length":"50",
					"refToView":"text_name",
					"sortno":2
				},
				{
					"id":"documentation",
					"type":"Text",
					"title":"Documentation",
					"title_zh_cn":"描述",
					"value":"",
					"description":"This attribute is used to annotate the BPMN element, such as descriptions and other documentation.",
					"description_zh_cn":"该属性用来注释BPMN节点元素, 包括描述和其他文档形式.",
					"readonly":false,
					"optional":true,
					"length":"500",
					"wrapLines":true,
					"sortno":3
				}
			]
		},
        {
            "type" : 			"node",
            "id": 			"UserTask",
            "title" : 			"User Task",
            "title_zh_cn" : 		"用户任务 (User Task)",
            "groups" : 			["Tasks"],
            "groups_zh_cn" : 		["环节 (Activities)"],
            "description" : 		"User Task.",
            "description_zh_cn" : 	"一个或多个用户来人工执行的任务.",
            "view" : 			"activity/usertask.svg",
            "icon" : 			"activity/list/type.user.png",
	        "propertyPackages": [
				"baseAttributes",
				"flowElement",
				"activity",
				"task",
				"taskDisplay",
				"actorCandidates",
				"properties",
				"iospecification",
				"taskEvent"
	        	],
            "properties" :      [
				{
					"id":"userChoiceActors",
					"type":"Choice",
					"title":"userChoiceActors",
					"title_zh_cn":"是否手工选择参与者",
					"value":"",
					"description":"userChoiceActors 该环节的参与者数据是否可以让登录用户人工选择，默认为false",
					"description_zh_cn":"userChoiceActors 该环节的参与者数据是否可以让登录用户人工选择，默认为false",
					"readonly":false,
					"optional":true,
					"grouping":"extra",
					"sortno": 2,
					"items": [
					    {
					        "id": "c1",
					        "title":"true",
					        "value":"true"
					    },
					    {
					        "id": "c2",
					        "title": "false",
					        "value": "false"
					    }
					]
				}, 
				{
					"id":"tasktitle",
					"type":"String",
					"title":"title",
					"title_zh_cn":"待办标题",
					"value":"",
					"description":"title",
					"description_zh_cn":"title 待办任务的标题",
					"readonly":false,
					"optional":true,
					"length":"50",
					"grouping":"extra",
				    "sortno":10
				},
				{
					"id":"taskpriority",
					"type":"integer",
					"title":"priority",
					"title_zh_cn":"待办优先级",
					"value":"",
					"description":"priority",
					"description_zh_cn":"priority 待办任务的优先级",
					"readonly":false,
					"optional":true,
					"length":"10",
					"grouping":"extra",
				    "sortno":11
				},
				{
					"id":"taskexpiretime",
					"type":"integer",
					"title":"expireTime",
					"title_zh_cn":"环节标准工时",
					"value":"",
					"description":"expireTime",
					"description_zh_cn":"expireTime 待办任务的过期时间",
					"readonly":false,
					"optional":true,
					"length":"10",
					/*"grouping":"extra",*/
				    "sortno":12
				}
            ],
            "roles" : 			[
                "all",
                "sequence_start",
                "sequence_end",
                "from_task_event",
                "to_task_event",
                "FromEventbasedGateway",
                "messageflow_start",
                "messageflow_end",
                "fromtoall",
				"ActivitiesMorph"
            ]
        },
	    {
            "type" :                    "node",
            "id":                       "SendTask",
            "title" :                   "Send",
            "title_zh_cn" :             "发送任务",
            "groups" :                  ["Tasks"],
            "groups_zh_cn" : 		["环节 (Activities)"],
            "description" :             "Send Task.",
            "view" :                    "activity/task.svg",
            "icon" :                    "activity/list/type.send.png",
            "propertyPackages": [],
            "properties" :      [
				],
            "roles" : 			[
                "all",
                "sequence_start",
                "sequence_end",
                "from_task_event",
                "to_task_event",
                "FromEventbasedGateway",
                "messageflow_start",
                "messageflow_end",
                "fromtoall",
				"ActivitiesMorph"
            ]
        },
	    {
            "type" :                    "node",
            "id":                       "ReceiveTask",
            "title" :                   "Receive",
            "title_zh_cn" :             "接收任务",
            "groups" :                  ["Tasks"],
            "groups_zh_cn" : 		["环节 (Activities)"],
            "description" :             "Receive Task.",
            "view" :                    "activity/task.svg",
            "icon" :                    "activity/list/type.receive.png",
            "propertyPackages": [],
            "properties" :      [
            	],
            "roles" : 			[
                "all",
                "sequence_start",
                "sequence_end",
                "from_task_event",
                "to_task_event",
                "FromEventbasedGateway",
                "messageflow_start",
                "messageflow_end",
                "fromtoall",
				"ActivitiesMorph"
            ]
        },
	    {
            "type" :                    "node",
            "id":                       "ManualTask",
            "title" :                   "Manual",
            "title_zh_cn" :             "手工任务",
            "groups" :                  ["Tasks"],
            "groups_zh_cn" : 		["环节 (Activities)"],
            "description" :             "Manual Task.",
            "view" :                    "activity/task.svg",
            "icon" :                    "activity/list/type.manual.png",
            "propertyPackages": [],                     
            "properties" :      [
            	],
            "roles" : 			[
                "all",
                "sequence_start",
                "sequence_end",
                "from_task_event",
                "to_task_event",
                "FromEventbasedGateway",
                "messageflow_start",
                "messageflow_end",
                "fromtoall",
				"ActivitiesMorph"
            ]
        },
	    {
            "type" :                    "node",
            "id":                       "ServiceTask",
            "title" :                   "Service",
            "title_zh_cn" :             "服务任务 (Service Task)",
            "groups" :                  ["Tasks"],
            "groups_zh_cn" : 		["环节 (Activities)"],      
            "description" :             "Service Task.",
            "view" :                    "activity/servicetask.svg",
            "icon" :                    "activity/list/type.service.png",
            "propertyPackages": [
				"baseAttributes",
				"flowElement",
				"activity",
				"task",
				"taskDisplay",
				"activityEvent",
				"taskEvent",
				"properties",
				"iospecification"
				],
            "properties" :      [
					{
						"id":"expression",
						"type":"Expression",
						"title":"Expression",
						"title_zh_cn":"表达式",
						"value":"",
						"description":"Expression.",
						"description_zh_cn":"expression 服务任务的表达式.",
						"readonly":false,
						"optional":true,
						"grouping":"extra"
					},
					{
						"id":"resultvariable",
						"type":"String",
						"title":"resultVariable",
						"title_zh_cn":"结果变量",
						"value":"",
						"description":"resultVariable.",
						"description_zh_cn":"resultVariable 服务任务的表达式的结果变量.",
						"readonly":false,
						"optional":true,
						"grouping":"extra"
					}
				],
            "roles" : 			[
                "all",
                "sequence_start",
                "sequence_end",
                "from_task_event",
                "to_task_event",
                "FromEventbasedGateway",
                "messageflow_start",
                "messageflow_end",
                "fromtoall",
				"ActivitiesMorph"
            ]
        },
	    {
            "type" :                    "node",
            "id":                       "Business RuleTask",
            "title" :                   "Business Rule",
            "title_zh_cn" :             "业务规则任务",
            "groups" :                  ["Tasks"],
            "groups_zh_cn" : 		["环节 (Activities)"],
            "description" :             "Business Rule Task.",
            "view" :                    "activity/task.svg",
            "icon" :                    "activity/list/type.business.rule.png",
            "propertyPackages": [],                     
            "properties" :      [
            	],
            "roles" : 			[
                "all",
                "sequence_start",
                "sequence_end",
                "from_task_event",
                "to_task_event",
                "FromEventbasedGateway",
                "messageflow_start",
                "messageflow_end",
                "fromtoall",
				"ActivitiesMorph"
            ]
        },
	    {
            "type" :                    "node",
            "id":                       "ScriptTask",
            "title" :                   "Script Task",
            "title_zh_cn" :             "脚本任务 (Script Task)",
            "groups" :                  ["Tasks"],
            "groups_zh_cn" : 		["环节 (Activities)"],      
            "description" :             "Script Task.",
            "description_zh_cn" :       "流程引擎自动执行指定语言的脚本来完成工作的任务.",
            "view" :                    "activity/scripttask.svg",
            "icon" :                    "activity/list/type.script.png",
            "propertyPackages": [
				"baseAttributes",
				"flowElement",
				"activity",
				"task",
				"taskDisplay",
				"activityEvent",
				"taskEvent",
				"properties",
				"iospecification"
				],
            "properties" :      [
				{
					"id":"script",
					"type":"Expression",
					"title":"Script",
					"title_zh_cn":"脚本",
					"value":"",
					"description":"Script that can be run when the Task is performed. Related to the Script TaskType, if a script is not included, then the Task will act equivalent to a TaskType of None.",
					"readonly":false,
					"optional":true,
					"grouping":"extra"
				},
				{
					"id":"script_language",
					"type":"Choice",
					"title":"Script Language",
					"title_zh_cn":"脚本语言",
					"value":"mvel",
					"description":"Defines the script language. The script language MUST be provided if a script is provided.",
					"readonly":false,
					"optional":true,
					"grouping":"extra",
					"items": [
						{
							"id": "c1",
							"title":"mvel",
							"value":"mvel"
						},
						{
							"id": "c2",
							"title": "java",
							"value": "java"
						}
					]                                               
				}
				],
            "roles" : 			[
                "all",
                "sequence_start",
                "sequence_end",
                "from_task_event",
                "to_task_event",
                "FromEventbasedGateway",
                "messageflow_start",
                "messageflow_end",
                "fromtoall",
				"ActivitiesMorph"
            ]
        },
        {
            "type" : 			"node",
            "id": 			"DraftTask",
            "title" : 			"Draft Task",
            "title_zh_cn" : 		"拟稿任务 (Draft Task)",
            "groups" : 			["Tasks"],
            "groups_zh_cn" : 		["环节 (Activities)"],
            "description" : 		"Draft Task.",
            "description_zh_cn" : 	"拟稿任务, 直接放在开始事件之后的环节, 无参与者, 直接跳过拟稿人.",
            "view" : 			"activity/drafttask.svg",
            "icon" : 			"activity/list/task.draft.png",
	        "propertyPackages": [
				"baseAttributes",
				"flowElement",
				"taskDisplay",
				"activityEvent",
				"taskEvent",
				"properties",
				"iospecification"
				],
            "properties" :      [
				{
					"id":"extensionproperties",
					"type":"Complex",
					"title":"Properties",
					"title_zh_cn":"扩展属性",
					"value":"",
					"description":"Properties",
					"description_zh_cn":"扩展属性",
					"readonly":false,
					"optional":true,
					"grouping":"extra",
					"sortno":9,
					"complexItems": [
						{
				        	"id":"key",
				        	"type":"String",
				        	"width":150,
				        	"value":"",
				        	"name":"Key"
				        },
						{
				        	"id":"value",
				        	"type":"String",
				        	"width":300,
				        	"value":"",
				        	"name":"Value"
				        }
					]
				}
                ],
            "roles" : 			[
                "all",
                "sequence_start",
                "sequence_end",
                "from_task_event",
                "to_task_event",
                "FromEventbasedGateway",
                "messageflow_start",
                "messageflow_end",
                "fromtoall",
				"ActivitiesMorph"
            ]
        },
        {
            "type" : 			"node",
            "id": 			"NotifyTask",
            "title" : 			"Notify Task",
            "title_zh_cn" : 		"通知任务 (Notify Task)",
            "groups" : 			["Tasks"],
            "groups_zh_cn" : 		["环节 (Activities)"],
            "description" : 		"Notify Task.",
            "description_zh_cn" : 	"通知任务, 用于给参与者发送一个通知消息.",
            "view" : 			"activity/notifytask.svg",
            "icon" : 			"activity/list/task.notify.png",
	        "propertyPackages": [
				"baseAttributes",
				"flowElement",
				"activity",
				"task",
				"taskDisplay",
				"activityEvent",
				"taskEvent",
				"actorCandidates",
				"properties",
				"iospecification",
				"taskEvent"
				],
            "properties" :      [
					{
						"id":"NOTIFY_CREATED",
						"type":"Expression",
						"title":"Notify_Created",
						"title_zh_cn":"创建通知任务",
						"value":"",
						"description":"Notify_Created",
						"description_zh_cn":"NOTIFY_CREATED 创建通知任务",
						"readonly":false,
						"optional":true,
						"grouping":"event",
					    "sortno":12
					},
					{
						"id":"notifytitle",
						"type":"String",
						"title":"title",
						"title_zh_cn":"通知标题",
						"value":"",
						"description":"title",
						"description_zh_cn":"title 通知的标题",
						"readonly":false,
						"optional":true,
						"grouping":"extra",
					    "sortno":1
					},
					{
						"id":"notifymessage",
						"type":"Expression",
						"title":"message",
						"title_zh_cn":"通知消息内容",
						"value":"",
						"description":"message",
						"description_zh_cn":"message 通知消息内容",
						"readonly":false,
						"optional":true,
						"grouping":"extra",
					    "sortno":2
					},
					{
						"id":"assignees",
						"type":"String",
						"title":"assignees",
						"title_zh_cn":"通知接收人",
						"value":"",
						"description":"assignees",
						"description_zh_cn":"assignees 通知接收人",
						"readonly":false,
						"optional":true,
						"grouping":"extra",
					    "sortno":3
					}
                ],
            "roles" : 			[
                "all",
                "sequence_start",
                "sequence_end",
                "from_task_event",
                "to_task_event",
                "FromEventbasedGateway",
                "messageflow_start",
                "messageflow_end",
                "fromtoall",
				"ActivitiesMorph"
            ]
        },
		{
			"type" : 			"node",
			"id": 				"Task",
			"title" : 			"Task",
			"title_zh_cn" : 		"任务 (Task)",
			"groups" : 			["Tasks"],
			"groups_zh_cn" : 		["环节 (Activities)"],
			"description" : 	"A task is a unit of work - the job to be performed.",
			"description_zh_cn" : 	"一个任务是一个工作的基本单元 - 工作在这里执行.",
			"view" : 			"activity/task.svg",
			"icon" : 			"activity/task.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"task",
				"taskDisplay",
				"properties",
				"iospecification",
				"ActivitiesMorph"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"sequence_end",
				"from_task_event",
				"to_task_event",
				"FromEventbasedGateway",
				"messageflow_start",
				"messageflow_end",
				"fromtoall",
				"ActivitiesMorph"
			],
			"properties": [
				/**{
					"id":"ruleFlowGroup",
					"type":"String",
					"title":"Ruleflow Group",
					"value":"",
					"description":"ruleFlowGroup",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Business Rule"
				},
				{
					"id":"onEntryActions",
					"type":"Action",
					"title":"On Entry Actions",
					"value":"",
					"description":"on entry actions",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Send|Receive|User|Manual|Service|Script|Business Rule",
					"grouping":"extra"
				},
				{
					"id":"onExitActions",
					"type":"Action",
					"title":"On Exit Actions",
					"value":"",
					"description":"on exit actions",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Send|Receive|User|Manual|Service|Script|Business Rule",
					"grouping":"extra"
				},
				{
					"id":"taskname",
					"type":"String",
					"title":"Task Name",
					"value":"",
					"description":"Task Name",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User"
				},
				{
					"id":"serviceoperation",
					"type":"String",
					"title":"Service Operation",
					"value":"",
					"description":"Service Operation",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Service"
				},
				{
					"id":"serviceinterface",
					"type":"String",
					"title":"Service Interface",
					"value":"",
					"description":"Service Interface",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|Service"
				},
				{
                    "id":"serviceimplementation",
                    "type":"Choice",
                    "title":"Service Implementation",
                    "value":"Java",
                    "description":"Specifies the service implementation type",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|Service",
                    "items": [
                        {
                            "id": "c1",
                            "title":"Java",
                            "value":"Java"
                        },
                        {
                            "id": "c2",
                            "title": "Webservice",
                            "value": "##WebService"
                        }
                    ]
                },
				{
					"id":"actors",
					"type":"String",
					"title":"Actors",
					"value":"",
					"description":"Comma-separated list of actors",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User"
				},
				{
					"id":"groupid",
					"type":"String",
					"title":"Groups",
					"value":"",
					"description":"he group id that is responsible for executing the human task",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User"
				},
				{
					"id":"comment",
					"type":"String",
					"title":"Comment",
					"value":"",
					"description":"Comment",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User",
					"grouping":"extra"
				},
				{
					"id":"content",
					"type":"String",
					"title":"Content",
					"value":"",
					"description":"The data associated with this task",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User",
					"grouping":"extra"
				},
				{
                    "id":"reassignment",
                    "type":"Reassignment",
                    "title":"Reassignment",
                    "value":"",
                    "description":"Task reassignments",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|User",
		            "grouping":"extra"
                },
                {
                    "id":"notifications",
                    "type":"Notifications",
                    "title":"Notifications",
                    "value":"",
                    "description":"Task notifications",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|User",
		            "grouping":"extra"
                },
	            {
    			    "id":"locale",
    				"type":"String",
    				"title":"Locale",
    				"value":"",
    				"description":"The task i18n locale",
    				"readonly":false,
    				"optional":true,
    				"fortasktypes":"None|User",
				    "grouping":"extra"
    			},
    			{
                    "id":"createdby",
                    "type":"String",
                    "title":"Created by",
                    "value":"",
                    "description":"User name of Task creator",
                    "readonly":false,
                    "optional":true,
		            "grouping":"extra",
                    "fortasktypes":"None|User"
                },
				{
					"id":"skippable",
					"type":"Choice",
					"title":"Skippable",
					"value":"",
					"description":"Specifies whether the human task can be skipped",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User",
					"grouping":"extra",
					"items": [
						{
							"id": "c1",
							"title":"true",
							"value":"true"
						},
						{
							"id": "c2",
							"title": "false",
							"value": "false"
						}
					]
				},
				{
					"id":"priority",
					"type":"String",
					"title":"Priority",
					"value":"",
					"description":"An integer indicating the priority of the human task",
					"readonly":false,
					"optional":true,
					"fortasktypes":"None|User",
					"grouping":"extra"
				},**/
               /**  ,{
                    "id":"multipleinstancecollectioninput",
                    "type":"Dynamicchoice",
                    "title":"MI collection input",
                    "value":"",
                    "description":"Sets the multiple instances collection input.",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|Send|Receive|User|Manual|Service",
                    "ifproptrue":"multipleinstance",
                    "items": [
                        {
                            "id": "c1",
                            "title":"vardefs",
                            "value":"$.properties.vardefs"
                        },
                        {
                            "id": "c2",
                            "title": "globals",
                            "value": "$.properties.globals"
                        }
                    ]
                }
               ,{
                    "id":"multipleinstancecollectionoutput",
                    "type":"Dynamicchoice",
                    "title":"MI collection output",
                    "value":"",
                    "description":"Sets the multiple instances collection output.",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|Send|Receive|User|Manual|Service",
                    "ifproptrue":"multipleinstance",
                    "items": [
                        {
                            "id": "c1",
                            "title":"vardefs",
                            "value":"$.properties.vardefs"
                        },
                        {
                            "id": "c2",
                            "title": "globals",
                            "value": "$.properties.globals"
                        }
                    ]
                },
                {
                    "id":"multipleinstancedatainput",
                    "type":"Dynamicdatainput",
                    "title":"MI data input",
                    "value":"",
                    "description":"Sets a data input for MI.",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|Send|Receive|User|Manual|Service",
                    "ifproptrue":"multipleinstance"
                },
                {
                    "id":"multipleinstancedataoutput",
                    "type":"Dynamicdatoutput",
                    "title":"MI data output",
                    "value":"",
                    "description":"Sets a data output for MI.",
                    "readonly":false,
                    "optional":true,
                    "fortasktypes":"None|Send|Receive|User|Manual|Service",
                    "ifproptrue":"multipleinstance"
                }**/
			]
		},

		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-simplemerge",
		               "title" : 			"Simple Merge",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Simple Merge Pattern",
		               "description_zh_cn" : 	    "Simple Merge Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-implicittermination",
		               "title" : 			"Implicit Termination",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Implicit Termination Pattern",
		               "description_zh_cn" : 	    "Implicit Termination Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-deferredchoice",
		               "title" : 			"Deferred Choice",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Deferred Choice Pattern",
		               "description_zh_cn" : 	    "Deferred Choice Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-synchronization",
		               "title" : 			"Synchronization",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Synchronization Pattern",
		               "description_zh_cn" : 	    "Synchronization Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-miwithoutsynchronization",
		               "title" : 			"MI Without Synchronization",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Multiple Instance Without Synchronization Pattern",
		               "description_zh_cn" : 	    "Multiple Instance Without Synchronization Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-synchronizingmerge",
		               "title" : 			"Synchronizing Merge",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Synchronizing Merge Pattern",
		               "description_zh_cn" : 	    "Synchronizing Merge Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-exclusivechoice",
		               "title" : 			"Exclusive Choice",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Exclusive Choice Pattern",
		               "description_zh_cn" : 	    "Exclusive Choice Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-parallelsplit",
		               "title" : 			"Parallel Split",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Parallel Split Pattern",
		               "description_zh_cn" : 	    "Parallel Split Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-xorsplit",
		               "title" : 			"XOR Split",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "XOR Split Pattern",
		               "description_zh_cn" : 	    "XOR Split Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-sequence",
		               "title" : 			"Sequence",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Sequence Pattern",
		               "description_zh_cn" : 	    "Sequence Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		         /**  {
		               "type" : 			"node",
		               "id": 				"wp-arbitrarycycles",
		               "title" : 			"Arbitrary Cycles",
		               "groups" : 			["Workflow Patterns"],
		               "groups_zh_cn" : 		["流程模式 (Workflow Patterns)"],
		               "description" : 	    "Arbitrary Cycles Pattern",
		               "description_zh_cn" : 	    "Arbitrary Cycles Pattern",
		               "view" : 			"activity/task.svg",
		               "icon" : 			"patterns/pattern.png",
		               "propertyPackages" :[
		               ],
		               "roles" : [
		                 "all",
		                 "fromtoall"
		               ],
		               "properties": [
		               ]
		            },**/
				
		{
			"type" : 			"node",
			"id" :				"ReusableSubprocess",
			"title" : 			"Reusable",
			"title_zh_cn" : 		"调用子流程 (Call Activity)",
			"groups" :			["Subprocesses"],
			"groups_zh_cn" :		["环节 (Activities)"],
			"description" :		"A reusable subprocess. It can be used to invoke another process.",
			"description_zh_cn" :	"可复用的子流程, 用来启动外部的一个流程.",
			"view" :			"activity/callactivity.svg",
			"icon" :			"activity/callactivity.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"actorCandidates",
				"taskDisplay",
				"properties",
				"iospecification"
			],
			"properties" :		[
				/**{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"title_zh_cn":"环节类型",
					"value":"Call Activity",
					"description":"The Type of Activity.",
					"description_zh_cn":"环节的类型名",
					"readonly":true,
					"optional":false,
					"length":""
				},**/
				{
					"id":"calledelement",
					"type":"calledelement",
					"title":"Called Element",
					"title_zh_cn":"子流程的Key",
					"value":"",
					"description":"",
					"description_zh_cn":"子流程的Key",
					"readonly":false,
					"optional":false,
					"refToView":"pimg",
					"length":"",
					"grouping":"extra"
				}
				/**,{
 					"id":"waitforcompletion",
					"type":"Choice",
					"title":"Wait for completion",
					"title_zh_cn":"等待完成",
					"value":"true",
					"description":"If true this sub-process node will only continue if the child process that was started has terminated its execution (completed or aborted)",
					"description_zh_cn":"true表示子流程开始之后再结束了, 主流程才能继续执行到下一步.",
					"readonly":false,
					"optional":true,
					"grouping":"extra",
					"items": [
						{
							"id": "c1",
							"title":"true",
							"value":"true"
						},
						{
							"id": "c2",
							"title": "false",
							"value": "false"
						}
					]
 				}**/
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"ActivitiesMorph"
			]
		}, 
		{
			"type" : 			"node",
			"id" :				"MultipleInstanceSubprocess",
			"title" : 			"Multiple instances",
			"title_zh_cn" : 		"多实例嵌入子流程 (Sub-Process)",
			"groups" :			["Subprocesses"],
			"groups_zh_cn" :		["环节 (Activities)"],
			"description" :		"A multiple instances subprocess. Allows to execute the contained process segment multiple times.",
			"description_zh_cn" :		"多实例的嵌入子流程, 允许该子流程执行多次.",
			"view" :			"activity/subprocess.multiple.svg",
			"icon" :			"activity/subprocess.mi.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"bgColor",
				"actorCandidates",
				"properties"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"title_zh_cn":"环节类型",
					"value":"Sub-Process",
					"description":"The Type of Activity.",
					"description_zh_cn":"环节的类型名",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#cfe1f1", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#cfe1f1",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},
 				{
					"id":"collectionexpression",
					"type":"String",
					"title":"CollectionExpression",
					"value":"",
					"description":"Name of a variable that represents the collection of elements that should be iterated over.",
					"readonly":false,
					"optional":false
				},
				{
					"id":"variablename",
					"type":"String",
					"title":"Variable Name",
					"value":"",
					"description":"Name of the variable to contain the current element from the collection.",
					"readonly":false,
					"optional":false
				},
				{
					"id":"onEntryActions",
					"type":"Action",
					"title":"On Entry Actions",
					"value":"",
					"description":"on entry actions",
					"readonly":false,
					"optional":true
				},
				{
					"id":"onExitActions",
					"type":"Action",
					"title":"On Exit Actions",
					"value":"",
					"description":"on exit actions",
					"readonly":false,
					"optional":true
				},
				{
					"id":"script_language",
					"type":"Choice",
					"title":"Script Language",
					"value":"mvel",
					"description":"Defines the script language.",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"mvel",
							"value":"mvel"
						},
						{
							"id": "c2",
							"title": "java",
							"value": "java"
						}
					]                                        
				},
				{
					"id":"vardefs",
					"type":"Vardef",
					"title":"Variable Definitions",
					"value":"",
					"description":"Comma-separated variable definitions",
					"readonly":false,
					"optional":true
				}
			],
			"roles": [
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Subprocess",
			"title" :			"Sub-Process",
			"title_zh_cn" :			"嵌入子流程 (Sub-Process)",
			"groups" :			["Subprocesses"],
			"groups_zh_cn" :		["环节 (Activities)"],
			"description" :		"A subprocess is a decomposable activity. An expanded subprocess contains a valid BPMN diagram.",
			"description_zh_cn" :	"嵌入子流程为一个流程容器, 其内部包含一个BPMN流程.",
			"view" :			"activity/subprocess.embedded.svg",
			"icon" :			"activity/expanded.subprocess.png",
 			"layout" : 			[
 									{"type" : "layout.bpmn2_0.subprocess"},
 									{"type" : "layout.container.dockers"},
 									{
 										"type" : "layout.container.minBounds",
 										"options" : {
 											"fixedX" : true,
 											"ignoreChildsWithId" : [
 												"http://b3mn.org/stencilset/bpmn2.0#Lane",
 												"http://b3mn.org/stencilset/bpmn2.0#StartNoneEvent"
 											]
 										}
 									}
 								],
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"actorCandidates",
				"properties",
				"iospecification"
			],
			"properties" :		[
				/**{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"title_zh_cn":"环节类型",
					"value":"Sub-Process",
					"description":"The Type of Activity.",
					"description_zh_cn":"环节的类型名",
					"readonly":true,
					"optional":false,
					"length":""
				},**/
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#cfe1f1", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#cfe1f1",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			],
			"roles"	:			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"canContainConnectionss",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"AdHocSubprocess",
			"title" :			"AdHoc Sub-Process",
			"title" :			"自由流嵌入子流程 (AdHoc Sub-Process)",
			"groups" :			["Subprocesses"],
			"groups_zh_cn" :		["环节 (Activities)"],
			"description" :		"A subprocess is a decomposable activity. An expanded subprocess contains a valid BPMN diagram.",
			"view" :			"activity/subprocess.adhoc.svg",
			"icon" :			"activity/expanded.subprocess.png",
 			"layout" : 			[
 									{"type" : "layout.bpmn2_0.subprocess"},
 									{"type" : "layout.container.dockers"},
 									{
 										"type" : "layout.container.minBounds",
 										"options" : {
 											"fixedX" : true,
 											"ignoreChildsWithId" : [
 												"http://b3mn.org/stencilset/bpmn2.0#Lane",
 												"http://b3mn.org/stencilset/bpmn2.0#StartNoneEvent"
 											]
 										}
 									}
 								],
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"activity",
				"adhocsubprocess",
				"properties",
				"iospecification"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"value":"Sub-Process",
					"description":"The Type of Activity.",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#cfe1f1", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#cfe1f1",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			],
			"roles"	:			[
				"all",
				"sequence_start",
				"sequence_end",
				"messageflow_start",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"canContainConnectionss",
				"ActivitiesMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"EventSubprocess",
			"title" :			"Event Sub-Process",
			"title_zh_cn" :			"事件嵌入子流程 (Event Sub-Process)",
			"groups" :                      ["Subprocesses"],
			"groups_zh_cn" :		["环节 (Activities)"],
			"description" :		"An Event-Subprocess is placed within another Subprocess. It becomes active when its start event gets triggered and can interrupt the Subprocess context or run in parallel (non-interrupting).",
			"view" :			"activity/event.subprocess.svg",
			"icon" :			"activity/event.subprocess.png",
 			"layout" : 			[{"type" : "layout.bpmn2_0.subprocess"}],
			"propertyPackages" :[
				"baseAttributes",
				"flowElement"
			],
			"properties" :		[
				{
					"id":"activitytype",
					"type":"String",
					"title":"ActivityType",
					"value":"Event-Sub-Process",
					"description":"The Type of Activity.",
					"readonly":true,
					"optional":false,
					"length":""
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			],
			"roles"	:			[
				"all",
				"fromtoall",
				"canContainConnectionss"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Exclusive_Databased_Gateway",
			"title" :			"Data-based Exclusive (XOR)",
			"title_zh_cn" :			"排他网关 (Exclusive)",
			"description" :		"When splitting, it routes the sequence flow to exactly one of the outgoing branches based on conditions. When merging, it awaits one incoming branch to complete before triggering the outgoing flow.",
			"description_zh_cn" :		"分离时, 根据迁出顺序流的条件来指定其中一条路径; 汇聚时, 在流转之前会等待所有的迁入分支完成.",
			"groups" : 			["Gateways"],
			"groups_zh_cn" : 		["网关 (Gateways)"],
			"view" : 			"gateway/exclusive.databased.svg",
			"icon" : 			"gateway/exclusive.databased.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f0e68c", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f0e68c",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"	
				},
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"Gateway type",
					"title":"Gateway-Type",
					"value":"XOR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":"",
					"grouping":"extra",
					"hidden":true,
					"visible":false
				},
				{
					"id":"xortype",
					"type":"String",
					"title":"XOR type",
					"value":"Data",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":"",
					"hidden":true,
                                        "visible":false
				},
				{
					"id":"markervisible",
					"type":"Boolean",
					"title":"X-Marker visible",
					"value":"true",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"cross",
					"hidden":true,
                    "visible":false
				}
				/**,{
					"id":"defaultgate",
					"type":"Dynamicgatewayconnections",
					"title":"Default Gate",
					"value":"",
					"description":"The default gateway connection.",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}**/
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" : 				"EventbasedGateway",
			"title" :			"Event-based",
			"groups" :			["Gateways"],
			"groups_zh_cn" : 		["网关 (Gateways)"],
			"description" :		"Is always followed by catching events or receive tasks. Sequence flow is routed to the subsequent event/task which happens first.",
			"view" :			"gateway/eventbased.svg",
			"icon" :			"gateway/eventbased.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f0e68c", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f0e68c",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"eventtype",
					"type":"Choice",
					"title":"Type",
					"value":"exclusive",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"items":[
						{
							"id":"c1",
							"title":"Exclusive (standard)",
							"value":"exclusive",
							"icon" : "gateway/list/eventbased.exclusive.png",
							"refToView":"default"
						},
						{
							"id":"c2",
							"title":"Exclusive Instantiation",
							"value":"instantiate_exclusive",
							"icon" : "gateway/list/eventbased.exclusive.png",
							"refToView":["default","instantiate"]
						},
						{
							"id":"c3",
							"title":"Parallel Instantiation",
							"value":"instantiate_parallel",
							"icon" : "gateway/list/eventbased.parallel.png",
							"refToView":["parallel","instantiate"]
						}
					]
				}
			],
			"roles":			[
				"all",
				"sequence_end",
				"fromtoall",
				"GatewaysMorph",
				"EventbasedGateway"
			]
		},
		{
			"type" : 			"node",
			"id" :				"ParallelGateway",
			"title" :			"Parallel Gateway",
			"title_zh_cn" :			"并行网关 (Parallel)",
			"groups" :			["Gateways"],
			"groups_zh_cn" : 		["网关 (Gateways)"],
			"description" :		"When used to split the sequence flow, all outgoing branches are activated simultaneously. When merging parallel branches it waits for all incoming branches to complete before triggering the outgoing flow.",
			"description_zh_cn" :	"分离时, 所有的迁出分支都会被同时激活为并行运行; 汇聚时, 所有的迁入的并行分支都需要完成才会触发流转.",
			"view" :			"gateway/parallel.svg",
			"icon" :			"gateway/parallel.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" : [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f0e68c", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f0e68c",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"GatewayType",
					"value":"AND",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":"",
					"grouping":"extra",
					"hidden":true,
                                        "visible":false
				}
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"InclusiveGateway",
			"title" :			"Inclusive Gateway",
			"title_zh_cn" :			"包容网关 (Inclusive)",
			"groups" :			["Gateways"],
			"groups_zh_cn" : 		["网关 (Gateways)"],
			"description" :		"When splitting, one or more branches are activated based on branching conditions. When merging, it awaits all active incoming branches to complete.",
			"description_zh_cn" :		"分离时, 会根据分支条件进行激活一个或多个分支; 汇聚时, 会等待所有激活的迁入分支完成才流转到下一步.",
			"view" :			"gateway/inclusive.svg",
			"icon" :			"gateway/inclusive.png",
			"propertyPackages" :[
				"baseAttributes",
				"flowElement",
				"gateway",
				"bgColor"
			],
			"properties" :		[
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f0e68c", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f0e68c",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a67f00",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"gatewaytype",
					"type":"String",
					"title":"GatewayType",
					"value":"OR",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":"",
					"grouping":"extra",
					"hidden":true,
                                        "visible":false
				}
                                /**,{
					"id":"defaultgate",
					"type":"String",
					"title":"Default Gate",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50",
					"wrapLines":true
				}**/
			],
			"roles": 			[
				"all",
				"sequence_start",
				"sequence_end",
				"fromtoall",
				"GatewaysMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"Lane",
			"title" :			"Lane",
			"groups" :			["Swimlanes"],
			"description" :		"Pools and Lanes represent responsibilities for activities in a process. A pool or a lane can be an organization, a role, or a system. Lanes sub-divide pools or other lanes hierarchically.",
			"view" :			"swimlane/lane.svg",
			"icon" :			"swimlane/lane.png",
			"propertyPackages": [
				"baseAttributes"
			],
			"properties" : 		[
				{
					"id":"showcaption",
					"type":"Boolean",
					"title":"ShowCaption",
					"value":"true",
					"description":"",
					"readonly":true,
					"optional":false,
					"refToView": ["caption", "captionDisableAntialiasing"],
					"fill":true,
					"visible":false,
					"stroke":false,
					"hidden":true,
                                        "visible":false
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#ffffff", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#ffffff",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			],
			"roles": [
			    "all", 
				"PoolChild",
				"fromtoall",
				"canContainConnectionss"				
			],
			"layout" : [
						{"type" : "layout.bpmn11.lane"},
						{
							"type" : "layout.container.minBounds",
							"options" : {
								"ignoreChildsWithId" : [
									"http://b3mn.org/stencilset/bpmn2.0#Lane"
								]
							}
						}
			]
		},
		{
			"type" : 			"node",
			"id" : 				"Group",
			"title" :			"Group",
			"title_zh_cn" :			"组 (Group)",
			"groups" :			["Artifacts"],
			"groups_zh_cn" :		["工件 (Artifacts)"],
			"description" :		"An arbitrary set of objects can be defined as a Group to show that they logically belong together.",
			"description_zh_cn" :	"用于指定多个对象成为逻辑上的一个对象.",
			"view" :			"artifact/group.svg",
			"icon":				"artifact/group.png",
			"propertyPackages" : [
				"baseAttributes",
				"flowElement",
				"artifact"
			],
			"properties" : [
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},
				{
					"id":"artifacttype",
					"type":"String",
					"title":"ArtifactType",
					"value":"Group",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":"",
					"grouping":"extra"
				}
			],
			"roles": [
				"all",
				"fromtoall",
				"canContainArtifacts"
			]
		},
		{
			"type" : 			"node",
			"id" : 				"TextAnnotation",
			"title" :			"Text Annotation",
			"title_zh_cn" :			"文本注释 (Annotation)",
			"groups" :			["Artifacts"],
			"groups_zh_cn" :		["工件 (Artifacts)"],
			"description" :		"Any object can be associated with a Text Annotation to provide additional documentation.",
			"description_zh_cn" :	"为任何一个对象提供附加的注释.",
			"view" :			"artifact/text.annotation.svg",
			"icon" :			"artifact/text.annotation.png",
			"defaultAlign" :	"northeast",
			"propertyPackages": [
				"baseAttributes",
				"flowElement",
				"artifact"
			],
			"properties" : 		[
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				},
				{
					"id":"artifacttype",
					"type":"String",
					"title":"ArtifactType",
					"value":"Annotation",
					"description":"",
					"readonly":true,
					"optional":false,
					"length":"",
					"hidden":true,
					"grouping":"extra"
				}
			],
			"roles": [
				"all",
				"from_artifact",
				"to_artifact",
				"TextAnnotationMorph"
			]
		},
		{
			"type" : 			"node",
			"id" :				"DataObject",
			"title" :			"Data Object",
			"description" :		"A Data Object represents information flowing through the process, such as business documents, e-mails or letters.",
			"groups" :			["Data Objects"],
			"view" :			"dataobject/data.object.svg",
			"icon" :			"dataobject/data.object.png",
			"defaultAlign" :	"southeast",
			"propertyPackages":	[
				"baseAttributes",
				"flowElement",
				"properties",
				"bgColor"
			],
			"properties" :		[
                {
                    "id":"name",
                    "type":"String",
                    "title":"Name",
                    "value":"dataObject",
                    "description":"The descriptive name of the BPMN element.",
                    "readonly":false,
                    "optional":true,
                    "length":"",
                    "wrapLines" : true,
                    "refToView":"text_name"
                },
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#C0C0C0", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#C0C0C0",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#000000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"input_output",
					"type":"Choice",
					"title":"Input/Output",
					"value":"None",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
                    "hidden":true,
                    "visible":false,
					"items":[
						{
							"id":"c1",
							"title":"None",
							"value":"None",						
							"refToView":"none"
						},
						{
							"id":"c2",
							"title":"Input",
							"value":"Input",
							"icon" : "dataobject/list/input.png",
							"refToView":"input"
						},
						{
							"id":"c3",
							"title":"Output",
							"value":"Output",
							"icon" : "dataobject/list/output.png",
							"refToView":"output"
						}
					]
				},
				{
					"id":"standardtype",
					"type":"Choice",
					"title":"Standard Type",
					"value":"None",
					"description":"Standard Type",
					"readonly":false,
					"optional":true,
					"items":[
						{
							"id":"c1",
							"title":"Object",
							"value":"Object"
						},
						{
							"id":"c2",
							"title":"Boolean",
							"value":"Boolean"
						},
						{
							"id":"c3",
							"title":"Float",
							"value":"Float"
						},
						{
							"id":"c3",
							"title":"Integer",
							"value":"Integer"
						},
						{
							"id":"c3",
							"title":"List",
							"value":"List"
						},
						{
							"id":"c3",
							"title":"String",
							"value":"String"
						}
					]
				},
				{
                    "id":"customtype",
                    "type":"String",
                    "title":"Custom Type",
                    "value":"",
                    "description":"Custom Type",
                    "readonly":false,
                    "optional":true,
                    "refToView":"",
                    "length":""
                }
			],
			"roles" : 			[
				"all",
				"from_task_event",
				"to_task_event",
				"fromtoall",
				"DataObjectMorph"
			]
		},
		{
			"type" : 			"node",
			"id": 				"StartNoneEvent",
			"title": 			"Start Event",
			"title_zh_cn":  "开始事件 (Start Event)",
			"groups" : 			["Start Events"],
			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description" : 	"Untyped start event.",
			"description_zh_cn" : 	"无类型的开始事件.",
			"view" : 			"startevent/none.svg",
			"icon" : 			"startevent/none.png",
			"propertyPackages":	[
				"baseAttributes",
				/**"catchEventAttributes",**/
				"bgColor"
			],
			"roles" : [
				"all",
				"Startevents_all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"title_zh_cn":"背景颜色",
					"value":"#7ff87f", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"title_zh_cn":"原始背景颜色",
					"value":"#7ff87f",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"title_zh_cn":"边框颜色",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"title_zh_cn":"原始边框颜色",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"title_zh_cn":"字体颜色",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				}
			]
		},
		{
			"type" :		 	"node",
			"id" :				"StartMessageEvent",
			"title" : 			"Message",
			"groups" :			["Start Events"],
			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description" :		"A process instance is started on receive of a message.",
			"view" :			"startevent/message.svg",
			"icon" :			"startevent/message.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles": [
				"all",
				"messageflow_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"sequence_start",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#7ff87f", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#7ff87f",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"value":"",
					"description":"Message Ref",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type" :			"node",
			"id" :				"StartTimerEvent",
			"title" :			"Timer",
			"groups" :			["Start Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description" :		"A process instance is started on cyclic timer events, points in time, after time spans or timeouts.",
			"view" :			"startevent/timer.svg",
			"icon" :			"startevent/timer.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#7ff87f", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#7ff87f",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"timeduration",
					"type":"Text",
					"title":"Time Duration",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},
				{
					"id":"timecycle",
					"type":"Text",
					"title":"Time Cycle",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},
				{
					"id":"timecyclelanguage",
					"type":"Choice",
					"title":"Time Cycle Language",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"nolang",
							"title":"None",
							"value":"none"
						},
						{
							"id":"cron",
							"title":"Cron",
							"value":"cron"
						}
					]
				}
			]
		},
		{
			"type": "node",
			"id":"StartEscalationEvent",
			"title":"Escalation",
			"groups":["Start Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description":"Reacts on an escalation to another role in the organization. This event is only used inside of a event subprocess.",
			"view":"startevent/escalation.svg",
			"icon":"startevent/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" : [
			    "all",
				"eventSubprocessElement",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#7ff87f", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#7ff87f",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"escalationcode",
					"type":"String",
					"title":"EscalationCode",
					"value":"",
					"description":"Escalation code",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type" : 			"node",
			"id" :				"StartConditionalEvent",
			"title" :			"Conditional",
			"groups" :			["Start Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description" :		"A process instance is started based on changed business conditions or matching business rules.",
			"view" :			"startevent/conditional.svg",
			"icon" 	:			"startevent/conditional.png",
			"propertyPackages": [
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"condition",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#7ff87f", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#7ff87f",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"conditionlanguage",
					"type":"Choice",
					"title":"Language",
					"value":"drools",
					"description":"Defines the condition language.",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"drools",
							"value":"drools"
						},
						{
							"id": "c2",
							"title": "mvel",
							"value": "mvel"
						}
					]                                               
				},
				{
					"id":"conditionexpression",
					"type":"Text",
					"title":"Expression",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true                                        
				}
			]
		},
		{
			"type": "node",
			"id":"StartErrorEvent",
			"title":"Error",
			"groups":["Start Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description":"Catches named errors. This event is only used inside of a event subprocess.",
			"view":"startevent/error.svg",
			"icon":"startevent/error.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#7ff87f", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#7ff87f",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"errorref",
					"type":"Text",
					"title":"ErrorRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"StartCompensationEvent",
			"title":"Compensation",
			"groups":["Start Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description":"Compensation handling. This event is only used inside of a event subprocess.",
			"view":"startevent/compensation.svg",
			"icon":"startevent/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"bgColor",
				"compensation"
			],
			"roles": [
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Startevents_all",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#7ff87f", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#7ff87f",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				}
			]
		},
		{
			"type" : 			"node",
			"id" :				"StartSignalEvent",
			"title" :			"Signal",
			"groups" :			["Start Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description" :		"A process instance is started based on signalling across different processes. (One signal thrown can be caught multiple times)",
			"view" :			"startevent/signal.svg",
			"icon" :			"startevent/signal.png",
			"propertyPackages": [
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"bgColor"
			],
			"roles" : 			[
				"all",
				"sequence_start",
				"Startevents_all",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"StartEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#7ff87f", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#7ff87f",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#188b18",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"signalref",
					"type":"String",
					"title":"SignalRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateMessageEventCatching",
			"title":"Message",
			"groups":["Catching Intermediate Events"],
			"description":"This event reacts on the arrival of a message.",
			"view":"intermediateevent/message.catching.svg",
			"icon":"catching/message.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"messageflow_end",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"value":"",
					"description":"Message Ref",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateTimerEvent",
			"title":"Timer",
			"groups":["Catching Intermediate Events"],
			"description":"Process execution is delayed until a certain point in time is reached or a particular duration is over.",
			"view":"intermediateevent/timer.svg",
			"icon":"catching/timer.png",
			"propertyPackages":[
				"baseAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"timeduration",
					"type":"Text",
					"title":"Time Duration",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},
				{
					"id":"timecycle",
					"type":"Text",
					"title":"Time Cycle",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				},
				{
					"id":"timecyclelanguage",
					"type":"Choice",
					"title":"Time Cycle Language",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"nolang",
							"title":"None",
							"value":"none"
						},
						{
							"id":"cron",
							"title":"Cron",
							"value":"cron"
						}
					]
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateEscalationEvent",
			"title":"Escalation",
			"groups":["Catching Intermediate Events"],
			"description":"This event reacts on the escalation of a case. It needs to be attached to the boundary of an activity.",
			"view":"intermediateevent/escalation.catching.svg",
			"icon":"catching/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
			    "all",
				"eventSubprocesElement",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"escalationcode",
					"type":"String",
					"title":"EscalationCode",
					"value":"",
					"description":"Escalation code",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateConditionalEvent",
			"title":"Conditional",
			"groups":["Catching Intermediate Events"],
			"description":"Process execution is delayed until a changed business condition or business rule matches.",
			"view":"intermediateevent/conditional.svg",
			"icon":"catching/conditional.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"condition",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"conditionlanguage",
					"type":"Choice",
					"title":"Language",
					"value":"drools",
					"description":"Defines the condition language.",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id": "c1",
							"title":"drools",
							"value":"drools"
						},
						{
							"id": "c2",
							"title": "mvel",
							"value": "mvel"
						}
					]                                               
				},
				{
					"id":"conditionexpression",
					"type":"Text",
					"title":"Expression",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateErrorEvent",
			"title":"Error",
			"groups":["Catching Intermediate Events"],
			"description":"Catches a named error, which was thrown be an inner scope (e.g. subprocess). This event needs to be attached to the boundary of an activity.",
			"view":"intermediateevent/error.svg",
			"icon":"catching/error.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"errorref",
					"type":"Text",
					"title":"ErrorRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateCompensationEventCatching",
			"title":"Compensation",
			"groups":["Catching Intermediate Events"],
			"description":"Compensation handling in case of partially failed operations. This event needs to be attached to the boundary of an activity.",
			"view":"intermediateevent/compensation.catching.svg",
			"icon":"catching/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"boundaryevent",
				"compensation",
				"bgColor"
			],
			"roles":[
				"all",
				"from_task_event",
				"fromtoall",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateSignalEventCatching",
			"title":"Signal",
			"groups":["Catching Intermediate Events"],
			"description":"Process execution is delayed until a particular signal is catched. Signalling can happen across different processes.",
			"view":"intermediateevent/signal.catching.svg",
			"icon":"catching/signal.png",
			"propertyPackages":[
				"baseAttributes",
				"catchEventAttributes",
				"interrupting",
				"boundaryevent",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"FromEventbasedGateway",
				"IntermediateEventOnSubprocessBoundary",
				"IntermediateEventOnActivityBoundary"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f5deb3", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f5deb3",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#a0522d",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"signalref",
					"type":"String",
					"title":"SignalRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateMessageEventThrowing",
			"title":"Message",
			"groups":["Throwing Intermediate Events"],
			"description":"The throwing message event sends a message to a communication partner and afterwards continues process execution.",
			"view":"intermediateevent/message.throwing.svg",
			"icon":"throwing/message.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"messageflow_start",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#8cabff", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#8cabff",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"value":"",
					"description":"Message Ref",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateEscalationEventThrowing",
			"title":"Escalation",
			"groups":["Throwing Intermediate Events"],
			"description":"This event triggers the escalation of the case to another role in the organisation. After this, process execution is resumed.",
			"view":"intermediateevent/escalation.throwing.svg",
			"icon":"throwing/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
			    "all",
				"eventSubprocessElement",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#8cabff", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#8cabff",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"escalationcode",
					"type":"String",
					"title":"EscalationCode",
					"value":"",
					"description":"Escalation code",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"IntermediateSignalEventThrowing",
			"title":"Signal",
			"groups":["Throwing Intermediate Events"],
			"description":"The throwing signal event fires up a signal. Afterwards it continues process execution. One signal thrown can be caught multiple times by different catching signal events.",
			"view":"intermediateevent/signal.throwing.svg",
			"icon":"throwing/signal.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles":[
				"all",
				"sequence_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#8cabff", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#8cabff",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#008cec",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"signalref",
					"type":"String",
					"title":"SignalRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type" : "node",
			"id": "EndNoneEvent",
			"title": "End Event",
			"title_zh_cn": "结束事件 (End Event)",
			"groups" : ["End Events"],	
			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description" : "The untyped end event typically marks the standard end of a process.",
			"description_zh_cn" : "无类型的结束事件, 用于结束一个分支或一个流程.",
			"view" : "endevent/none.svg",
			"icon" : "endevent/none.png",
			"propertyPackages":[
				"baseAttributes",
				/**"throwEventAttributes",**/
				"bgColor"
			],
			"roles" : [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"title_zh_cn":"背景颜色",
					"value":"#f88282", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"title_zh_cn":"原始背景颜色",
					"value":"#f88282",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"title_zh_cn":"边框颜色",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"title_zh_cn":"原始边框颜色",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"title_zh_cn":"字体颜色",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				}
			]
		},
		{
			"type": "node",
			"id":"EndMessageEvent",
			"title":"Message",
			"groups":["End Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description":"At the end of the process, a message is sent.",
			"view":"endevent/message.svg",
			"icon":"endevent/message.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"messageflow_start",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f88282", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f88282",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"messageref",
					"type":"String",
					"title":"MessageRef",
					"value":"",
					"description":"Message Ref",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"EndEscalationEvent",
			"title":"Escalation",
			"groups":["End Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description":"The case is escalated with the end of the process.",
			"view":"endevent/escalation.svg",
			"icon":"endevent/escalation.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
			    "all",
				"eventSubprocessElement",
				"EndEventsMorph",
				"Endevents_all",
				"sequence_end"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f88282", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f88282",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"escalationcode",
					"type":"String",
					"title":"EscalationCode",
					"value":"",
					"description":"Escalation code",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"type": "node",
			"id":"EndErrorEvent",
			"title":"Error",
			"groups":["End Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description":"The process ends in an error state. As result a named error is thrown.",
			"view":"endevent/error.svg",
			"icon":"endevent/error.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f88282", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f88282",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"errorref",
					"type":"Text",
					"title":"ErrorRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
        {
            "type": "node",
            "id":"EndCancelEvent",
            "title":"Cancel",
            "groups":["End Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
            "description":"Triggering cancellation of a transaction.",
            "view":"endevent/cancel.svg",
            "icon":"endevent/cancel.png",
            "propertyPackages":[
                "baseAttributes",
                "throwEventAttributes",
                "bgColor"
            ],
            "roles":[
                "all",
                "sequence_end",
                "to_task_event",
                "from_task_event",
                "fromtoall",
                "Endevents_all",
                "EndEventsMorph"
            ],
            "properties": [
                {
                  "id":"bgcolor",
                  "type":"Color",
                  "title":"Background Color",
                  "value":"#f88282",
                  "description":"",
                  "readonly":false,
                  "optional":false,
                  "refToView": "fill_el",
                  "fill":true,
                  "stroke":false,
                  "grouping" : "display"
                },
                {
                  "id":"origbgcolor",
                  "type":"Color",
                  "title":"Original Background Color",
                  "value":"#f88282",
                  "description":"",
                  "readonly":false,
                  "optional":true,
                  "hidden":true,
                  "visible":false
                },
                {
                  "id":"bordercolor",
                  "type":"Color",
                  "title":"Border Color",
                  "value":"#7f0000",
                  "description":"",
                  "readonly":false,
                  "optional":false,
                  "refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
                  "fill":false,
                  "stroke":true,
                  "grouping" : "display"
                },
                {
                  "id":"origbordercolor",
                  "type":"Color",
                  "title":"Original Border Color",
                  "value":"#7f0000",
                  "description":"",
                  "readonly":false,
                  "optional":true,
                  "hidden":true,
                  "visible":false
                },
                {
                "id":"fontcolor",
                "type":"Color",
                "title":"Font Color",
                "value":"#000000",
                "description":"Font color",
                "readonly":false,
                "optional":false,
                "refToView": ["text_name"],
                "fill":true,
                "stroke":false,
                "grouping" : "display"
                }
            ]
        },
		{
			"type": "node",
			"id":"EndCompensationEvent",
			"title":"Compensation",
			"groups":["End Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description":"Triggering compensation as final process step.",
			"view":"endevent/compensation.svg",
			"icon":"endevent/compensation.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor",
				"compensationThrowing",
				"compensation"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f88282", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f88282",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				}
			]
		},
		{
			"type": "node",
			"id":"EndSignalEvent",
			"title":"Signal",
			"groups":["End Events"],			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description":"At the end of the process, a signal is thrown. (One signal thrown can be caught multiple times)",
			"view":"endevent/signal.svg",
			"icon":"endevent/signal.png",
			"propertyPackages":[
				"baseAttributes",
				"throwEventAttributes",
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"Endevents_all",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"value":"#f88282", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"value":"#f88282",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"signalref",
					"type":"String",
					"title":"SignalRef",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":""
				}
			]
		},
		{
			"type": "node",
			"id":"EndTerminateEvent",
			"title":"Terminate End",
			"title_zh_cn":"终结事件 (Terminate End)",
			"groups":["End Events"],
			"groups_zh_cn" : 	 ["事件 (Events)"],
			"description":"Triggering the immediate termination of a process instance. All steps still in execution in parallel branches are terminated.",
			"description_zh_cn":"触发立即结束整个流程实例,所有的并行分支都会被结束掉.",
			"view":"endevent/terminate.svg",
			"icon":"endevent/terminate.png",
			"propertyPackages":[
				"baseAttributes",
				/**"throwEventAttributes",**/
				"bgColor"
			],
			"roles": [
				"all",
				"sequence_end",
				"to_task_event",
				"from_task_event",
				"fromtoall",
				"EndEventsMorph"
			],
			"properties": [
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"title_zh_cn":"背景颜色",
					"value":"#f88282", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": "fill_el",
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"title_zh_cn":"原始背景颜色",
					"value":"#f88282",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"title_zh_cn":"边框颜色",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["edge", "fill_border", "bg_frame", "frame", "frame2", "frame3", "frame4", "frame5", "frame6", "frame7", "frame8", "frame9", "frame10", "frame11", "frame12", "frame13", "frame14", "frame15", "frame16", "frame17", "frame18", "frame19", "frame20", "frame21", "frame22", "frame23", "frame24", "frame25", "frame26", "border"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"title_zh_cn":"原始边框颜色",
					"value":"#7f0000",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"title_zh_cn":"字体颜色",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				}
			]
		},
		{
			"type": "edge",
			"id":"SequenceFlow",
			"title":"Sequence Flow",
			"title_zh_cn":"顺序流 (Sequence Flow)",
			"description":"Sequence Flow defines the execution order of activities.",
			"description_zh_cn":"顺序流用来定义环节之间的执行顺序.",
			"groups":["Connecting Objects"],
			"groups_zh_cn":["连接 (Connections)"],
			"view":"connector/sequenceflow.svg",
			"icon":"connector/sequenceflow.png",
			"propertyPackages":[
				"baseAttributes"
			],
			"roles": [
				"all",
				"ConnectingObjectsMorph"
			],
			"properties":[
					{
						"id":"TRANSITION_TAKED",
						"type":"Expression",
						"title":"选择迁移",
						"value":"",
						"description_zh_cn":"Transition_Taked 选择迁移",
						"readonly":false,
						"optional":true,
						"grouping":"event",
					    "sortno":14
					},
				{
					"id":"ConditionType",
					"type":"Choice",
					"title":"ConditionType",
					"value":"None",
					"description":"Determine the typ of the flow object.",
					"readonly":true,
					"optional":false,
					"visible":false,
                    "hidden":true,
					"items": [
						{
							"id":"none",
							"title":"Standard",
							"value":"None"
						},
						{
							"id":"expression",
							"title":"Conditional Flow",
							"value":"Expression",
							"icon" : "connector/list/type.expression.png",
							"refToView":""
						},
						{
							"id":"default",
							"title":"Default Flow",
							"value":"Default",
							"icon" : "connector/list/type.default.png",
							"refToView":"default"
						}
					]
				},
				{
					"id":"conditionexpression",
					"type":"Expression",
					"title":"Condition Expression",
					"title_zh_cn":"条件表达式",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true
				},
				/**{
					"id":"conditionexpressionlanguage",
					"type":"Choice",
					"title":"Condition Expression Language",
					"title_zh_cn":"条件表达式语言",
					"value":"mvel",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"",
					"wrapLines":true,
					"items": [
						{
							"id": "c1",
							"title": "mvel",
							"value": "mvel"
						},
                        {
                            "id": "c2",
                            "title": "java",
                            "value": "java"
                        }  
					]  
				},**/
				{
					"id":"userChoice",
					"type":"Choice",
					"title":"userChoice",
					"title_zh_cn":"是否手工选择迁移",
					"value":"",
					"description":"userChoice 该迁移在可以进行人工选择，默认为false",
					"description_zh_cn":"userChoice 该迁移在可以进行人工选择，默认为false",
					"readonly":false,
					"optional":true,
					"grouping":"extra",
					"items": [
					    {
					        "id": "c1",
					        "title":"true",
					        "value":"true"
					    },
					    {
					        "id": "c2",
					        "title": "false",
					        "value": "false"
					    }
					]
				},
				{
					"id":"userChoiceRequired",
					"type":"Choice",
					"title":"userChoiceRequired",
					"title_zh_cn":"该迁移是否必选",
					"value":"",
					"description":"userChoiceRequired 该迁移在可以人工选择之后，该迁移是否是必选，默认为false",
					"description_zh_cn":"userChoiceRequired 该迁移在可以人工选择之后，该迁移是否是必选，默认为false",
					"readonly":false,
					"optional":true,
					"grouping":"extra",
					"items": [
					    {
					        "id": "c1",
					        "title":"true",
					        "value":"true"
					    },
					    {
					        "id": "c2",
					        "title": "false",
					        "value": "false"
					    }
					]
				},
				/**{
					"id":"priority",
					"type":"Integer",
					"title":"Priority",
					"value":"",
					"description":"priority",
					"readonly":false,
					"optional":true,
					"grouping":"extra",
					"min":"1"
				},**/
				{
					"id":"isimmediate",
					"type":"Boolean",
					"title":"isImmediate",
					"value":"",
					"description":"An optional Boolean value specifying whether Activities or Choreography Activities not in the model containing the Sequence Flow can occur between the elements connected by the Sequence Flow. If the value is true, they MAY NOT occur. If the value is false, they MAY occur. Also see the isClosed attribute on Process, Choreography, and Collaboration.",
					"readonly":false,
					"optional":false,
					"hidden":true,
                     "visible":false
				},
				{
					"id":"showdiamondmarker",
					"type":"Boolean",
					"title":"is conditional flow",
					"value":false,
					"description":"System intern variable to set the Diamond invisible, if sourceShape is a gateway and ConditionType is set to Expression",
					"readonly":true,
					"optional":false,
					"refToView":"conditional",
					"hidden":true,
                     "visible":false
				},
				{
					"id":"bgcolor",
					"type":"Color",
					"title":"Background Color",
					"title_zh_cn":"背景颜色",
					"value":"#546778", 
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["start", "end", "frame2"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"origbgcolor",
					"type":"Color",
					"title":"Original Background Color",
					"title_zh_cn":"原始背景颜色",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"title_zh_cn":"边框颜色",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["_1", "_2", "_3", "_4", "_5", "_6", "_7", "_8", "_9", "_10", "start", "conditional", "default", "end", "frame2"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"title_zh_cn":"原始边框颜色",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				},
				{
					"id":"fontcolor",
					"type":"Color",
					"title":"Font Color",
					"title_zh_cn":"字体颜色",
					"value":"#000000",
					"description":"Font color",
					"readonly":false,
					"optional":false,
					"refToView": ["text_name"],
					"fill":true,
					"stroke":false,
					"grouping" : "display"
				},
				{
					"id":"fontsize",
					"type":"Choice",
					"title":"Font Size",
					"title_zh_cn":"字体大小",
					"value":"",
					"grouping" : "display",
					"description":"The Font Size",
					"readonly":false,
					"optional":false,
					"refToView":"text_name",
					"items":[
						{
							"id":"c1",
							"title":"8",
							"value":"8"
						},
						{
							"id":"c2",
							"title":"9",
							"value":"9"
						},
						{
							"id":"c3",
							"title":"10",
							"value":"10"
						},
						{
							"id":"c4",
							"title":"11",
							"value":"11"
						},
						{
							"id":"c5",
							"title":"12",
							"value":"12"
						},
						{
							"id":"c6",
							"title":"14",
							"value":"14"
						},
						{
							"id":"c7",
							"title":"18",
							"value":"18"
						},
						{
							"id":"c8",
							"title":"20",
							"value":"20"
						},
						{
							"id":"c9",
							"title":"24",
							"value":"24"
						},
						{
							"id":"c10",
							"title":"36",
							"value":"36"
						},
						{
							"id":"c11",
							"title":"48",
							"value":"48"
						},
						{
							"id":"c12",
							"title":"72",
							"value":"72"
						}
					]
				}
			]
		},
		{
			"type": "edge",
			"id":"Association_Undirected",
			"title":"Association",
			"title_zh_cn":"关联关系 (Association)",
			"description":"Attaching a data object with an Undirected Association to a sequence flow indicates hand-over of information between the activities involved.",
			"description_zh_cn":"用于指定两个对象(环节, 文本注释等)之间无方向的关联关系.",
			"groups":["Connecting Objects"],
			"groups_zh_cn":["连接 (Connections)"],
			"view":"connector/association.undirected.svg",
			"icon":"connector/association.undirected.png",
			"roles": [
				"all",
				"ConnectingObjectsMorph"
			],			
			"propertyPackages" : [
			    "baseAttributesNoName"
			],
			"properties" : [
				{
					"id":"type",
					"type":"Choice",
					"title":"Responsibilities",
					"value":"none",
					"description":"Describes the type of the responsibility according to RACI.",
					"readonly":false,
					"optional":true,
					"refToView":"name",
					"visible":false,
					"hidden":true,
					"items": [
						{
							"id":"c1",
							"title":"",
							"value":"none"
						},
						{
							"id":"c2",
							"title":"responsible",
							"value":"performs"
						},
						{
							"id":"c3",
							"title":"accountable",
							"value":"approves"
						},
						{
							"id":"c4",
							"title":"consulted",
							"value":"consulted"
						},
						{
							"id":"c5",
							"title":"informed",
							"value":"isNotified"
						}
					]
				},
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"title_zh_cn":"边框颜色",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["_1", "_2", "_3", "_4", "_5", "_6", "_7", "_8", "_9", "_10", "start", "conditional", "default", "end", "frame2"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				}
           ]
		},
		{
			"type": "edge",
			"id":"Association_Unidirectional",
			"title":"Association (unidirectional)",
			"title_zh_cn":"单向关联关系 (Association)",
			"description":"A Directed Association indicates information flow. A data object can be read at the start of an activity or written upon completion.",
			"description_zh_cn":"拥有一个方向的关联关系的连接对象, 例如: 数据对象可以被一个环节开始时读取或结束时写入.",
			"groups":["Connecting Objects"],
			"groups_zh_cn":["连接 (Connections)"],
			"view":"connector/association.unidirectional.svg",
			"icon":"connector/association.unidirectional.png",
			"roles": [
				"all",
				"ConnectingObjectsMorph",
				"Directed_Association"
			],
			"propertyPackages" : [
			    "baseAttributesNoName"
			],
			"properties" : [
				{
					"id":"bordercolor",
					"type":"Color",
					"title":"Border Color",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView": ["_1", "_2", "_3", "_4", "_5", "_6", "_7", "_8", "_9", "_10", "start", "conditional", "default", "end", "frame2"],
					"fill":false,
					"stroke":true,
					"grouping" : "display"
				},
				{
					"id":"origbordercolor",
					"type":"Color",
					"title":"Original Border Color",
					"value":"#546778",
					"description":"",
					"readonly":false,
					"optional":true,
					"hidden":true,
					"visible":false
				}
           ]
		}
	],
	
	"rules" : {
		"cardinalityRules": [
			{
				"role":"Startevents_all",
				"incomingEdges": [
					{
						"role":"SequenceFlow",
						"maximum":0
						
					}
				]
			},
			{
				"role":"Endevents_all",
				"outgoingEdges": [
					{
						"role":"SequenceFlow",
						"maximum":0
						
					}
				]
			}
		],
		"connectionRules": [
			{
				"role":"SequenceFlow",
				"connects": [
					{
						"from":"sequence_start",
						"to":["sequence_end"]
					},
					{
						"from":"Exclusive_Eventbased_Gateway",
						"to":["FromEventbasedGateway"]
					},
					{
						"from" : "EventbasedGateway",
						"to" : ["FromEventbasedGateway"]
					}
				]
			},
			{
				"role":"MessageFlow",
				"connects": [
					{
						"from":"messageflow_start",
						"to":["messageflow_end"]
					}
				]
			},
			{
				"role":"IntermediateEventOnActivityBoundary",
				"connects": [
					{
						"from":"Task",
						"to":["IntermediateEventOnActivityBoundary"]
					},
				]
			},
			{
				"role":"IntermediateEventOnSubprocessBoundary",
				"connects": [
					{
						"from":"CollapsedSubprocess",
						"to":["IntermediateEventOnSubprocessBoundary"]
					},
					{
						"from":"Subprocess",
						"to":["IntermediateEventOnSubprocessBoundary"]
					}
				]
			},
			{
				"role" : "Directed_Association",
				"connects" : [
					{
						"from" : "from_task_event",
						"to" : ["DataObject"]
					},
					{
						"from" : "from_task_event",
						"to" : ["DataStore"]
					},
					{
						"from" : "from_task_event",
						"to" : ["ITSystem"]
					},
					{
						"from" : "DataObject",
						"to" : ["to_task_event"]
					},
					{
						"from" : "DataStore",
						"to" : ["to_task_event"]
					},
					{
						"from" : "ITSystem",
						"to" : ["to_task_event"]
					},
					{
						"from" : "IntermediateCompensationEventCatching",
						"to" : ["to_task_event"]
					}
				]
			},
			{
				"role" : "Association_Undirected",
				"connects" : [
					{
						"from" : "SequenceFlow",
						"to" : ["DataObject"]
					},
					{
						"from" : "DataObject",
						"to" : ["SequenceFlow"]
					},
					{
						"from" : "DataObject",
						"to" : ["MessageFlow"]
					},
					{
						"from" : "MessageFlow",
						"to" : ["DataObject"]
					},
					{
						"from" : "ITSystem",
						"to" : ["to_task_event"]
					},
					{
						"from" : "from_task_event",
						"to" : ["ITSystem"]
					},
					{
						"from" : "DataStore",
						"to" : ["to_task_event"]
					},
					{
						"from" : "from_task_event",
						"to" : ["DataStore"]
					},
					{
						"from" : "fromtoall",
						"to" : ["TextAnnotation"]
					},
					{
						"from" : "TextAnnotation",
						"to" : "fromtoall"
					},
					{
						"from" : "Message",
						"to" : ["MessageFlow"]
					},
					{
						"from" : "MessageFlow",
						"to" : ["Message"]
					},
					{
					   "from" : "ActivitiesMorph",
					   "to" : ["to_participant"]
					},
					{
					   "from" : "to_participant",
					   "to" : ["ActivitiesMorph"]
					}
				]
			}
		],
		"containmentRules" : [
			{
				"role" : "BPMNDiagram",
				"contains" : ["all"]
			},
			{
				"role" : "EventSubprocess",
				"contains" : [
					"eventSubprocessElement",
					"sequence_start",
					"sequence_end"
				]
			},
			{
				"role" : "Pool",
				"contains" : [
					"Lane"
				]
			},
			{
				"role" : "Lane",
				"contains" : [
                    "sequence_start",
                    "sequence_end",
                    "from_task_event",
                    "to_task_event",
                    "EventSubprocess",
                    "TextAnnotation",
                    "from_participant"
                ]
			},
			{
				"role" : "Subprocess",
				"contains" : [
					"sequence_start",
					"sequence_end",
					"from_task_event",
					"to_task_event",
					"EventSubprocess",
					"TextAnnotation",
					"from_participant"
				]
			},
			{
				"role" : "AdHocSubprocess",
				"contains" : [
					"sequence_start",
					"sequence_end",
					"from_task_event",
					"to_task_event",
					"EventSubprocess",
					"TextAnnotation",
					"from_participant"
				]
			},
			{
				"role" : "MultipleInstanceSubprocess",
				"contains" : [
					"sequence_start",
					"sequence_end",
					"from_task_event",
					"to_task_event",
					"EventSubprocess",
					"TextAnnotation",
					"from_participant"
				]
			},
			{
				"role" : "MessageContainer",
				"contains" : ["Message"]
			}

		],
		"morphingRules": [
			{
				"role": "ActivitiesMorph",
				"baseMorphs": ["Task", "UserTask"],
				"preserveBounds" : true
			},
			{
				"role": "GatewaysMorph",
				"baseMorphs": ["Exclusive_Databased_Gateway"]
			},
			{
				"role": "StartEventsMorph",
				"baseMorphs": ["StartNoneEvent"],
				"showInShapeMenu":false
			},
			{
				"role": "EndEventsMorph",
				"baseMorphs": ["EndNoneEvent"]
			},
			{
				"role": "TextAnnotationMorph",
				"baseMorphs": ["TextAnnotation"]
			},
			{
				"role": "DataObjectMorph",
				"baseMorphs": ["DataObject"]
			},
			{
				"role": "ConnectingObjectsMorph",
				"baseMorphs": ["SequenceFlow"]
			},
			{
				"role": "AssociationMorph",
				"baseMorphs": [""]
			}
		],
		"layoutRules" : [
			{
				"role": "ActivitiesMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "GatewaysMorph",
				"outs": [{"t":2, "r":1, "b":2, "l":1}]
			},
			{
				"role": "StartEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			},
			{
				"role": "EndEventsMorph",
				"outs":[{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1,"r":2,"b":1,"l":2}],
				"ins": [{"edgeRole":"MessageFlow","t":2, "r":1, "b":2, "l":1},
						{"t":1, "r":2, "b":1, "l":2}]
			}
		]
	}
}
